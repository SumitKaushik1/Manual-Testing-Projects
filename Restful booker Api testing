{
	"info": {
		"_postman_id": "0c15d0d4-ebe9-4930-8985-b6444ed1a51a",
		"name": "day25(Assignment1) Restful booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23880231",
		"_collection_link": "https://bold-meteor-421879.postman.co/workspace/MTB-ASSIGNMENT-~0c52ba9b-d2d7-4922-b4ff-f569248b89f2/collection/23880231-0c15d0d4-ebe9-4930-8985-b6444ed1a51a?action=share&source=collection_link&creator=23880231"
	},
	"item": [
		{
			"name": "Task1 POSTIVE TESTCASE",
			"item": [
				{
					"name": "1. create token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    //got javascript object by json \r",
									"    var jasonResponse = pm.response.json();\r",
									"\r",
									"    // pm.collectionVariables.set(\"token\", jasonResponse[\"token\"]);\r",
									"\r",
									"   \r",
									"    pm.collectionVariables.set(\"token\", jasonResponse.token);\r",
									"\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('Content-Type is present', function () {\r",
									"    pm.response.to.have.header('Content-Type');\r",
									"})\r",
									"\r",
									"pm.test('Body matches string as token', function () {\r",
									"    pm.expect(pm.response.text()).to.include('token');\r",
									"})\r",
									"\r",
									"var schema = {\r",
									"    '$schema': 'https://json-schema.org/draft/2019-09/schema',\r",
									"    '$id': 'http://example.com/example.json',\r",
									"    'type': 'object',\r",
									"    'default': {},\r",
									"    'title': 'Root Schema',\r",
									"    'required': ['token'],\r",
									"    'properties': {\r",
									"        'token': {\r",
									"            'type': 'string',\r",
									"            'default': '',\r",
									"            'title': 'The token Schema',\r",
									"            'examples': ['abc123']\r",
									"        }\r",
									"    },\r",
									"    'examples': [{ 'token': 'abc123' }]\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n// for authentication we send this to server ,after authentication server will send token or key\r\n{\r\n    \"username\" :\"admin\",\r\n    \"password\" :\"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "2..Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status code', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"\r",
									"    pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"    });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    '$schema': 'https://json-schema.org/draft/2019-09/schema',\r",
									"    '$id': 'http://example.com/example.json',\r",
									"    'title': 'Root Schema',\r",
									"    'type': 'object',\r",
									"    'default': {},\r",
									"    'required': [\r",
									"        'bookingid',\r",
									"        'booking'\r",
									"    ],\r",
									"    'properties': {\r",
									"        'bookingid': {\r",
									"            'title': 'The bookingid Schema',\r",
									"            'type': 'integer',\r",
									"            'default': 0\r",
									"        },\r",
									"        'booking': {\r",
									"            'title': 'The booking Schema',\r",
									"            'type': 'object',\r",
									"            'default': {},\r",
									"            'required': [\r",
									"                'firstname',\r",
									"                'lastname',\r",
									"                'totalprice',\r",
									"                'depositpaid',\r",
									"                'bookingdates',\r",
									"                'additionalneeds'\r",
									"            ],\r",
									"            'properties': {\r",
									"                'firstname': {\r",
									"                    'title': 'The firstname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'lastname': {\r",
									"                    'title': 'The lastname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'totalprice': {\r",
									"                    'title': 'The totalprice Schema',\r",
									"                    'type': 'integer',\r",
									"                    'default': 0\r",
									"                },\r",
									"                'depositpaid': {\r",
									"                    'title': 'The depositpaid Schema',\r",
									"                    'type': 'boolean',\r",
									"                    'default': false\r",
									"                },\r",
									"                'bookingdates': {\r",
									"                    'title': 'The bookingdates Schema',\r",
									"                    'type': 'object',\r",
									"                    'default': {},\r",
									"                    'required': [\r",
									"                        'checkin',\r",
									"                        'checkout'\r",
									"                    ],\r",
									"                    'properties': {\r",
									"                        'checkin': {\r",
									"                            'title': 'The checkin Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        },\r",
									"                        'checkout': {\r",
									"                            'title': 'The checkout Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                'additionalneeds': {\r",
									"                    'title': 'The additionalneeds Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.update booking name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"James\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"firstname\",\r",
									"        \"lastname\",\r",
									"        \"totalprice\",\r",
									"        \"depositpaid\",\r",
									"        \"bookingdates\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"firstname\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The firstname Schema\",\r",
									"            \"examples\": [\r",
									"                \"James\"\r",
									"            ]\r",
									"        },\r",
									"        \"lastname\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The lastname Schema\",\r",
									"            \"examples\": [\r",
									"                \"Ericsson\"\r",
									"            ]\r",
									"        },\r",
									"        \"totalprice\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The totalprice Schema\",\r",
									"            \"examples\": [\r",
									"                495\r",
									"            ]\r",
									"        },\r",
									"        \"depositpaid\": {\r",
									"            \"type\": \"boolean\",\r",
									"            \"default\": false,\r",
									"            \"title\": \"The depositpaid Schema\",\r",
									"            \"examples\": [\r",
									"                true\r",
									"            ]\r",
									"        },\r",
									"        \"bookingdates\": {\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"title\": \"The bookingdates Schema\",\r",
									"            \"required\": [\r",
									"                \"checkin\",\r",
									"                \"checkout\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"checkin\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The checkin Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-10-27\"\r",
									"                    ]\r",
									"                },\r",
									"                \"checkout\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The checkout Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"2023-03-06\"\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"examples\": [{\r",
									"                \"checkin\": \"2019-10-27\",\r",
									"                \"checkout\": \"2023-03-06\"\r",
									"            }]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"firstname\": \"James\",\r",
									"        \"lastname\": \"Ericsson\",\r",
									"        \"totalprice\": 495,\r",
									"        \"depositpaid\": true,\r",
									"        \"bookingdates\": {\r",
									"            \"checkin\": \"2019-10-27\",\r",
									"            \"checkout\": \"2023-03-06\"\r",
									"        }\r",
									"    }]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{token}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.getBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"\r",
									"pm.test(\"check firstname\",function(){\r",
									"   var jason_data=pm.response.json();\r",
									"   pm.expect(jason_data[\"firstname\"]).to.eql(\"sumit\");\r",
									"});*/\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Susan\");\r",
									"});\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    \"firstname\": \"Sally\",\r",
									"    \"lastname\": \"Brown\",\r",
									"    \"totalprice\": 111,\r",
									"    \"depositpaid\": true,\r",
									"    \"bookingdates\": {\r",
									"        \"checkin\": \"2013-02-23\",\r",
									"        \"checkout\": \"2014-10-23\"\r",
									"    },\r",
									"    \"additionalneeds\": \"Breakfast\"\r",
									"\r",
									"\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"   // pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{token}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{token}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task2 POSTIVE TESTCASE",
			"item": [
				{
					"name": "1. create token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   //got javascript object by json \r",
									"   var jasonResponse=pm.response.json();\r",
									"   \r",
									"  // pm.collectionVariables.set(\"token\", jasonResponse[\"token\"]);\r",
									"     pm.collectionVariables.set(\"token\", jasonResponse.token);\r",
									"});\r",
									"\r",
									"    pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"    });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"token\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"token\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The token Schema\",\r",
									"            \"examples\": [\r",
									"                \"abc123\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"token\": \"abc123\"\r",
									"    }]\r",
									"}\r",
									"\r",
									"//var data1 = [true, false];\r",
									"//var data2 = [true, 123];\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"    //pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
									"   // pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n// for authentication we send this to server ,after authentication server will send token or key\r\n{\r\n    \"username\" :\"admin\",\r\n    \"password\" :\"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "2..Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status code', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"\r",
									"    pm.test(\"Content-Type is present\", function () {\r",
									"        pm.collectionVariables.set(\"bookingid\",pm.response.json().bookingid);\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"    });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    '$schema': 'https://json-schema.org/draft/2019-09/schema',\r",
									"    '$id': 'http://example.com/example.json',\r",
									"    'title': 'Root Schema',\r",
									"    'type': 'object',\r",
									"    'default': {},\r",
									"    'required': [\r",
									"        'bookingid',\r",
									"        'booking'\r",
									"    ],\r",
									"    'properties': {\r",
									"        'bookingid': {\r",
									"            'title': 'The bookingid Schema',\r",
									"            'type': 'integer',\r",
									"            'default': 0\r",
									"        },\r",
									"        'booking': {\r",
									"            'title': 'The booking Schema',\r",
									"            'type': 'object',\r",
									"            'default': {},\r",
									"            'required': [\r",
									"                'firstname',\r",
									"                'lastname',\r",
									"                'totalprice',\r",
									"                'depositpaid',\r",
									"                'bookingdates',\r",
									"                'additionalneeds'\r",
									"            ],\r",
									"            'properties': {\r",
									"                'firstname': {\r",
									"                    'title': 'The firstname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'lastname': {\r",
									"                    'title': 'The lastname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'totalprice': {\r",
									"                    'title': 'The totalprice Schema',\r",
									"                    'type': 'integer',\r",
									"                    'default': 0\r",
									"                },\r",
									"                'depositpaid': {\r",
									"                    'title': 'The depositpaid Schema',\r",
									"                    'type': 'boolean',\r",
									"                    'default': false\r",
									"                },\r",
									"                'bookingdates': {\r",
									"                    'title': 'The bookingdates Schema',\r",
									"                    'type': 'object',\r",
									"                    'default': {},\r",
									"                    'required': [\r",
									"                        'checkin',\r",
									"                        'checkout'\r",
									"                    ],\r",
									"                    'properties': {\r",
									"                        'checkin': {\r",
									"                            'title': 'The checkin Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        },\r",
									"                        'checkout': {\r",
									"                            'title': 'The checkout Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                'additionalneeds': {\r",
									"                    'title': 'The additionalneeds Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"strictSSL": false
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "token",
								"value": "token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"check delete or not\",function(){\r",
									"pm.expect(pm.response.text()).to.eql(\"User Delete Successfully\");\r",
									"});\r",
									"*/\r",
									"//there is bug in the api b.z test in not passed adn created signal is comming instead of user deleted successfuly\r",
									"\r",
									"//this is bug\r",
									"pm.test(\"check status 200\",function(){\r",
									"pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"check content-type\",function(){\r",
									" pm.response.to.have.header(\"Content-Type\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cookie",
								"value": "token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.getBooking Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"\r",
									"pm.test(\"check firstname\",function(){\r",
									"   var jason_data=pm.response.json();\r",
									"   pm.expect(jason_data[\"firstname\"]).to.eql(\"sumit\");\r",
									"});*/\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Jim\");\r",
									"});\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    \"firstname\": \"Sally\",\r",
									"    \"lastname\": \"Brown\",\r",
									"    \"totalprice\": 111,\r",
									"    \"depositpaid\": true,\r",
									"    \"bookingdates\": {\r",
									"        \"checkin\": \"2013-02-23\",\r",
									"        \"checkout\": \"2014-10-23\"\r",
									"    },\r",
									"    \"additionalneeds\": \"Breakfast\"\r",
									"\r",
									"\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"   // pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{token}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{token}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task3 POSTIVE TESTCASE",
			"item": [
				{
					"name": "1.Getting all booking id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//you can see there is the square brackets so as the body jason array is comming \r",
									"//now iniside that curly brackets ie the jason object. itr is \r",
									"/*\r",
									"pm.test(\"global variable store \",function(){\r",
									"var json_data=pm.response.json();\r",
									"var bookingid =json_data[0].bookingid;\r",
									"\r",
									"pm.globals.unset(\"newbookingid\");\r",
									"pm.collectionVariables.unset(\"newbookingid\");\r",
									"//variable scope to the collections\r",
									"pm.globals.set(\"newbookingid\",+bookingid);\r",
									"//+ sign will convert the booking id(string) into the number  \r",
									"\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"check status 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.collectionVariables.set(\"bookingid2\",  pm.response.json()[0].bookingid);\r",
									"})\r",
									"\r",
									"pm.test(\"check Content-Type\",function(){\r",
									"  \r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									"var schema ={\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"default\": [],\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"items\": {\r",
									"        \"type\": \"object\",\r",
									"        \"title\": \"A Schema\",\r",
									"        \"required\": [\r",
									"            \"bookingid\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"bookingid\": {\r",
									"                \"type\": \"integer\",\r",
									"                \"title\": \"The bookingid Schema\",\r",
									"                \"examples\": [\r",
									"                    1,\r",
									"                    2,\r",
									"                    3,\r",
									"                    4\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"examples\": [{\r",
									"            \"bookingid\": 1\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 2\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 3\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 4\r",
									"        }]\r",
									"    },\r",
									"    \"examples\": [\r",
									"        [{\r",
									"            \"bookingid\": 1\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 2\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 3\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 4\r",
									"        }]\r",
									"    ]\r",
									"};\r",
									"\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"   \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"body matches string bookingid \",function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\")\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.update the booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var name = pm.globals.get(\"name\");;\r",
									"\r",
									"console.log(name);\r",
									"\r",
									"pm.test(\"to check patch\", function () {\r",
									" var jason_data=pm.response.json();\r",
									"    pm.expect(jason_data.firstname).to.eql(name);\r",
									"});*/\r",
									"\r",
									"pm.test(\"status code\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"var schema={\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"firstname\",\r",
									"        \"lastname\",\r",
									"        \"totalprice\",\r",
									"        \"depositpaid\",\r",
									"        \"bookingdates\",\r",
									"        \"additionalneeds\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"firstname\": {\r",
									"            \"title\": \"The firstname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"lastname\": {\r",
									"            \"title\": \"The lastname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"totalprice\": {\r",
									"            \"title\": \"The totalprice Schema\",\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0\r",
									"        },\r",
									"        \"depositpaid\": {\r",
									"            \"title\": \"The depositpaid Schema\",\r",
									"            \"type\": \"boolean\",\r",
									"            \"default\": false\r",
									"        },\r",
									"        \"bookingdates\": {\r",
									"            \"title\": \"The bookingdates Schema\",\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"required\": [\r",
									"                \"checkin\",\r",
									"                \"checkout\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"checkin\": {\r",
									"                    \"title\": \"The checkin Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                },\r",
									"                \"checkout\": {\r",
									"                    \"title\": \"The checkout Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"additionalneeds\": {\r",
									"            \"title\": \"The additionalneeds Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"check schema\",function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(),schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"check content-type\",function(){\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									"pm.test(\"check string firstname\",function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cookie",
								"value": "token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"sumit\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid2}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{bookingid2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.get id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var name = pm.globals.get(\"name\");\r",
									"console.log(name);\r",
									"console.log( pm.globals.get(\"name\"));\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstname).to.eql(name);\r",
									"});*/\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as bookgingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
									"});\r",
									"\r",
									"\r",
									"var schema ={\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"firstname\",\r",
									"        \"lastname\",\r",
									"        \"totalprice\",\r",
									"        \"depositpaid\",\r",
									"        \"bookingdates\",\r",
									"        \"additionalneeds\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"firstname\": {\r",
									"            \"title\": \"The firstname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"lastname\": {\r",
									"            \"title\": \"The lastname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"totalprice\": {\r",
									"            \"title\": \"The totalprice Schema\",\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0\r",
									"        },\r",
									"        \"depositpaid\": {\r",
									"            \"title\": \"The depositpaid Schema\",\r",
									"            \"type\": \"boolean\",\r",
									"            \"default\": false\r",
									"        },\r",
									"        \"bookingdates\": {\r",
									"            \"title\": \"The bookingdates Schema\",\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"required\": [\r",
									"                \"checkin\",\r",
									"                \"checkout\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"checkin\": {\r",
									"                    \"title\": \"The checkin Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                },\r",
									"                \"checkout\": {\r",
									"                    \"title\": \"The checkout Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"additionalneeds\": {\r",
									"            \"title\": \"The additionalneeds Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"   // pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid2}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{bookingid2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task4 POSITIVE TESTCASE",
			"item": [
				{
					"name": "1.create booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.collectionVariables.set('deleted_bookingid', pm.response.json().bookingid);\r",
									"})\r",
									"\r",
									"pm.test('check content-type', function () {\r",
									"    pm.response.to.have.header('Content-Type');\r",
									"})\r",
									"\r",
									"pm.test('check String booking id ', function () {\r",
									"    pm.expect(pm.response.text()).to.include('bookingid');\r",
									"})\r",
									"\r",
									"var schema = {\r",
									"    '$schema': 'https://json-schema.org/draft/2019-09/schema',\r",
									"    '$id': 'http://example.com/example.json',\r",
									"    'title': 'Root Schema',\r",
									"    'type': 'object',\r",
									"    'default': {},\r",
									"    'required': [\r",
									"        'bookingid',\r",
									"        'booking'\r",
									"    ],\r",
									"    'properties': {\r",
									"        'bookingid': {\r",
									"            'title': 'The bookingid Schema',\r",
									"            'type': 'integer',\r",
									"            'default': 0\r",
									"        },\r",
									"        'booking': {\r",
									"            'title': 'The booking Schema',\r",
									"            'type': 'object',\r",
									"            'default': {},\r",
									"            'required': [\r",
									"                'firstname',\r",
									"                'lastname',\r",
									"                'totalprice',\r",
									"                'depositpaid',\r",
									"                'bookingdates',\r",
									"                'additionalneeds'\r",
									"            ],\r",
									"            'properties': {\r",
									"                'firstname': {\r",
									"                    'title': 'The firstname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'lastname': {\r",
									"                    'title': 'The lastname Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                },\r",
									"                'totalprice': {\r",
									"                    'title': 'The totalprice Schema',\r",
									"                    'type': 'integer',\r",
									"                    'default': 0\r",
									"                },\r",
									"                'depositpaid': {\r",
									"                    'title': 'The depositpaid Schema',\r",
									"                    'type': 'boolean',\r",
									"                    'default': false\r",
									"                },\r",
									"                'bookingdates': {\r",
									"                    'title': 'The bookingdates Schema',\r",
									"                    'type': 'object',\r",
									"                    'default': {},\r",
									"                    'required': [\r",
									"                        'checkin',\r",
									"                        'checkout'\r",
									"                    ],\r",
									"                    'properties': {\r",
									"                        'checkin': {\r",
									"                            'title': 'The checkin Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        },\r",
									"                        'checkout': {\r",
									"                            'title': 'The checkout Schema',\r",
									"                            'type': 'string',\r",
									"                            'default': ''\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                'additionalneeds': {\r",
									"                    'title': 'The additionalneeds Schema',\r",
									"                    'type': 'string',\r",
									"                    'default': ''\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('schema check',function (){\r",
									"    pm.expect(tv4.validate(pm.response.json(),schema)).to.be.true;\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"pritam\",\r\n    \"lastname\" : \"sharma\",\r\n    \"totalprice\" : 1018,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.Delete bookingid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"check booking id deleted\",function(){\r",
									"pm.expect(pm.response.text()).to.eql(\"User Delete Successfully\");\r",
									"});*/\r",
									"\r",
									"//there is bug in api b/z it responds with the created signal.\r",
									"\r",
									"//this is bug\r",
									"pm.test(\"check status\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cookie",
								"value": "token",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{deleted_bookingid}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{deleted_bookingid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task5 NEGATIVE TESTCASE",
			"item": [
				{
					"name": "1. create token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   //got javascript object by json \r",
									"   var jasonResponse=pm.response.json();\r",
									"   \r",
									"  // pm.collectionVariables.set(\"token\", jasonResponse[\"token\"]);\r",
									"     pm.collectionVariables.set(\"token\", jasonResponse.token);\r",
									"});\r",
									"\r",
									"    pm.test(\"Content-Type is present\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\");\r",
									"    });\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string as token\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"token\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"token\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The token Schema\",\r",
									"            \"examples\": [\r",
									"                \"abc123\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"token\": \"abc123\"\r",
									"    }]\r",
									"}\r",
									"\r",
									"//var data1 = [true, false];\r",
									"//var data2 = [true, 123];\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"    //pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
									"   // pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n// for authentication we send this to server ,after authentication server will send token or key\r\n{\r\n    \"username\" :\"admin\",\r\n    \"password\" :\"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.wrong payload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"wrong payload \",function(){\r",
									"    pm.response.to.have.status(500);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"type": "text"
							},
							{
								"key": "token",
								"value": "{{resfulbookerToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{$randomFirstName}}\",\r\n    \"lastname\" : \"Dutta\",\r\n    \"totalprice\" : {{$randomInt}},\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{$randomDateRecent}}\",\r\n        \"checkout\" : \"2022-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Lunch\"\r\n}\r\n//now we maintain the body datat in text foramt instead of jason( ie wrong payload)",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task6  NEGATIVE TESTCASE",
			"item": [
				{
					"name": "1.Getting all booking id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//you can see there is the square brackets so as the body jason array is comming \r",
									"//now iniside that curly brackets ie the jason object. itr is \r",
									"/*\r",
									"pm.test(\"global variable store \",function(){\r",
									"var json_data=pm.response.json();\r",
									"var bookingid =json_data[0].bookingid;\r",
									"\r",
									"pm.globals.unset(\"newbookingid\");\r",
									"pm.collectionVariables.unset(\"newbookingid\");\r",
									"//variable scope to the collections\r",
									"pm.globals.set(\"newbookingid\",+bookingid);\r",
									"//+ sign will convert the booking id(string) into the number  \r",
									"\r",
									"});\r",
									"*/\r",
									"\r",
									"pm.test(\"check status 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.collectionVariables.set(\"bookingid2\",  pm.response.json()[0].bookingid);\r",
									"})\r",
									"\r",
									"pm.test(\"check Content-Type\",function(){\r",
									"  \r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									"var schema ={\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"array\",\r",
									"    \"default\": [],\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"items\": {\r",
									"        \"type\": \"object\",\r",
									"        \"title\": \"A Schema\",\r",
									"        \"required\": [\r",
									"            \"bookingid\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"            \"bookingid\": {\r",
									"                \"type\": \"integer\",\r",
									"                \"title\": \"The bookingid Schema\",\r",
									"                \"examples\": [\r",
									"                    1,\r",
									"                    2,\r",
									"                    3,\r",
									"                    4\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"examples\": [{\r",
									"            \"bookingid\": 1\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 2\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 3\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 4\r",
									"        }]\r",
									"    },\r",
									"    \"examples\": [\r",
									"        [{\r",
									"            \"bookingid\": 1\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 2\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 3\r",
									"        },\r",
									"        {\r",
									"            \"bookingid\": 4\r",
									"        }]\r",
									"    ]\r",
									"};\r",
									"\r",
									"\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;\r",
									"   \r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"body matches string bookingid \",function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\")\r",
									"})\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.Delete bookingid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*pm.test(\"check booking id deleted\",function(){\r",
									"pm.expect(pm.response.text()).to.eql(\"User Delete Successfully\");\r",
									"});*/\r",
									"\r",
									"//there is bug in api b/z it responds with the created signal.\r",
									"\r",
									"//this is bug\r",
									"pm.test(\"check status\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cookie",
								"value": "token",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{deleted_bookingid}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{deleted_bookingid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.update the booking Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var name = pm.globals.get(\"name\");;\r",
									"\r",
									"console.log(name);\r",
									"\r",
									"pm.test(\"to check patch\", function () {\r",
									" var jason_data=pm.response.json();\r",
									"    pm.expect(jason_data.firstname).to.eql(name);\r",
									"});*/\r",
									"\r",
									"pm.test(\"status code\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"var schema={\r",
									"    \"$schema\": \"https://json-schema.org/draft/2019-09/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"required\": [\r",
									"        \"firstname\",\r",
									"        \"lastname\",\r",
									"        \"totalprice\",\r",
									"        \"depositpaid\",\r",
									"        \"bookingdates\",\r",
									"        \"additionalneeds\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"firstname\": {\r",
									"            \"title\": \"The firstname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"lastname\": {\r",
									"            \"title\": \"The lastname Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        },\r",
									"        \"totalprice\": {\r",
									"            \"title\": \"The totalprice Schema\",\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0\r",
									"        },\r",
									"        \"depositpaid\": {\r",
									"            \"title\": \"The depositpaid Schema\",\r",
									"            \"type\": \"boolean\",\r",
									"            \"default\": false\r",
									"        },\r",
									"        \"bookingdates\": {\r",
									"            \"title\": \"The bookingdates Schema\",\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"required\": [\r",
									"                \"checkin\",\r",
									"                \"checkout\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"checkin\": {\r",
									"                    \"title\": \"The checkin Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                },\r",
									"                \"checkout\": {\r",
									"                    \"title\": \"The checkout Schema\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\"\r",
									"                }\r",
									"            }\r",
									"        },\r",
									"        \"additionalneeds\": {\r",
									"            \"title\": \"The additionalneeds Schema\",\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\"\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"pm.test(\"check schema\",function(){\r",
									"    pm.expect(tv4.validate(pm.response.json(),schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"check content-type\",function(){\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"})\r",
									"\r",
									"pm.test(\"check string firstname\",function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "cookie",
								"value": "token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"sumit\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{bookingid2}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{bookingid2}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "bookingId",
			"value": "",
			"disabled": true
		},
		{
			"key": "bookingid",
			"value": ""
		},
		{
			"key": "bookingid2",
			"value": ""
		},
		{
			"key": "deleted_bookingid",
			"value": ""
		}
	]
}