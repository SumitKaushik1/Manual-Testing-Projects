{
	"info": {
		"_postman_id": "39ceb7ac-3c9c-4a8d-8dce-ca4a5db2472b",
		"name": "day27(Assignment)_GItHub_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23880231",
		"_collection_link": "https://bold-meteor-421879.postman.co/workspace/MTB-ASSIGNMENT-~0c52ba9b-d2d7-4922-b4ff-f569248b89f2/collection/23880231-39ceb7ac-3c9c-4a8d-8dce-ca4a5db2472b?action=share&source=collection_link&creator=23880231"
	},
	"item": [
		{
			"name": "1.List_of_all_repository",
			"item": [
				{
					"name": "1.List _of_all_repository_positive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//var you can reassingn and reinitialize\r",
									"//let you can reassign but donot reinitialize\r",
									"// const= nethier reassingn and reinitalize\r",
									"var schema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"}\r",
									"\r",
									"var jsonResponse=pm.response.json();\r",
									"\r",
									"//note it same as below is doing \r",
									"pm.test(\"schema validate\",function(){\r",
									"    pm.expect(tv4.validate(jsonResponse,schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"//status repsone should be 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//json response must contain header\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"// ie the json object converted to string then it checks it conatains id \r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"// to check it has the body or not\r",
									"pm.test(\"response  body\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"\r",
									"// it checks the given schema to the respone json converted to schema that matched the user given schema\r",
									"pm.test(\"validate jasonschema\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"//performance testing \r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"//to check respone has no error \r",
									"pm.test(\"Response has no error\", function () {\r",
									" pm.response.to.not.be.error;\r",
									"});\r",
									"\r",
									"\r",
									"//by default the query param on the server side for the api is full_name ie the response will be given according to the repository full name lexicographically\r",
									"//i will test the first id repo name must be  this CDAC-PROJECT-CRM-JSP-JAVABEAN-MYSQL\r",
									"pm.test(\"Name key in Repo\", function () {\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									" pm.expect(jasonData[0]['name']).to.eql('CDAC-PROJECT-CRM-JSP-JAVABEAN-MYSQL')\r",
									"});\r",
									"\r",
									"//or\r",
									"/*\r",
									"pm.test(\"Name key in Repo\", function () {\r",
									"    var jsonData = pm.response.json(); // Corrected typo in \"response\"\r",
									"    pm.expect(jsonData[0].name).to.eql('CDAC-PROJECT-CRM-JSP-JAVABEAN-MYSQL'); // Use dot notation for object properties\r",
									"});\r",
									"*/\r",
									"\r",
									"//first id should not be null \r",
									"pm.test(\"id  not null\", function () {\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									" pm.expect(jasonData[0]['id']).not.to.be.null;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//////////////////////////////////////////////////////////\r",
									"\r",
									"/*\r",
									"// to print the response in the json format string \r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"\r",
									"// to search the particular text in the jason response\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});\r",
									"\r",
									"\r",
									"// to make the value is equal to particular value it si used to check \r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"\r",
									"\r",
									"// it is used ot check the whole body in the form of string \r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check response time less than particular \r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// to check the status code name \r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"// to convert the variable form the xml foramt firstly we convert the xml format into the jason format \r",
									"var jsonObject = xml2Json(responseBody);\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.github.com/users/SumitKaushik1/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"users",
								"SumitKaushik1",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.List _of_all_repository_negative_without_basic_should_work",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"}\r",
									"\r",
									"var jsonResponse=pm.response.json();\r",
									"\r",
									"pm.test(\"schema validate\",function(){\r",
									"    pm.expect(tv4.validate(jsonResponse,schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"//////////////////////////////////////////////////////////\r",
									"\r",
									"/*\r",
									"// to print the response in the json format string \r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"\r",
									"// to search the particular text in the jason response\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});\r",
									"\r",
									"\r",
									"// to make the value is equal to particular value it si used to check \r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"\r",
									"\r",
									"// it is used ot check the whole body in the form of string \r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check response time less than particular \r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// to check the status code name \r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"// to convert the variable form the xml foramt firstly we convert the xml format into the jason format \r",
									"var jsonObject = xml2Json(responseBody);\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.github.com/users/SumitKaushik1/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"users",
								"SumitKaushik1",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.1.List _of_all_repository_support_pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"}\r",
									"\r",
									"var jsonResponse=pm.response.json();\r",
									"\r",
									"pm.test(\"schema validate\",function(){\r",
									"    pm.expect(tv4.validate(jsonResponse,schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"/*\r",
									"\r",
									"Here is an explanation of this specific line from the Postman pagination script:\r",
									"\r",
									"js\r",
									"\r",
									"Copy code\r",
									"\r",
									"const nextPage = link.match(/<(.*?)>; rel=\"next\"/)[1];\r",
									"This line uses a regular expression match to extract the next page URL from the Link header. Let's break it down:\r",
									"\r",
									"link contains the full Link header string\r",
									"\r",
									".match() performs a regex match on the string to capture a specific part\r",
									"\r",
									"/<(.*?)>; rel=\"next\" is the regular expression:\r",
									"\r",
									"< and > match opening and closing angle brackets\r",
									"(.*?) captures any characters in between into a group\r",
									"; rel=\"next\" matches the next page identifier\r",
									"The [1] after the match accesses the first capture group in the regex\r",
									"\r",
									"So the URL extracted by (.*?) is stored in the nextPage variable\r",
									"\r",
									"In summary, it uses a regex with capture groups to extract the next page URL from the Link header string. The [1] grabs just the captured URL.\r",
									"\r",
									"This allows us to programmatically pull out the next page link instead of manually looking for it in the header. The variable can then be used in the next request.\r",
									"\r",
									"*/\r",
									"/*\r",
									"pm.test(\"body contains Link header previous\",function(){\r",
									"// Parse Link header \r",
									"const link = pm.response.headers.get(\"Link\");\r",
									"\r",
									"// Extract next page URL \r",
									"const previousPage = link.match(/<(.*?)>; rel=\"previous\"/)[1];\r",
									"\r",
									"// Set variable to store it\r",
									"pm.collectionVariables.set(\"previousPage\", previousPage);\r",
									"});\r",
									"*/\r",
									"\r",
									"/*\r",
									"\r",
									"Here is an explanation of this specific line from the Postman pagination script:\r",
									"\r",
									"js\r",
									"\r",
									"Copy code\r",
									"\r",
									"const nextPage = link.match(/<(.*?)>; rel=\"next\"/)[1];\r",
									"This line uses a regular expression match to extract the next page URL from the Link header. Let's break it down:\r",
									"\r",
									"link contains the full Link header string\r",
									"\r",
									".match() performs a regex match on the string to capture a specific part\r",
									"\r",
									"/<(.*?)>; rel=\"next\" is the regular expression:\r",
									"\r",
									"< and > match opening and closing angle brackets\r",
									"(.*?) captures any characters in between into a group\r",
									"; rel=\"next\" matches the next page identifier\r",
									"The [1] after the match accesses the first capture group in the regex\r",
									"\r",
									"So the URL extracted by (.*?) is stored in the nextPage variable\r",
									"\r",
									"In summary, it uses a regex with capture groups to extract the next page URL from the Link header string. The [1] grabs just the captured URL.\r",
									"\r",
									"This allows us to programmatically pull out the next page link instead of manually looking for it in the header. The variable can then be used in the next request.\r",
									"cbnm, \r",
									"*/\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"body contains Link header next\",function(){\r",
									"// Parse Link header \r",
									"const link = pm.response.headers.get(\"Link\");\r",
									"\r",
									"// Extract next page URL \r",
									"const nextPage = link.match(/<(.*?)>; rel=\"next\"/)[1];\r",
									"\r",
									"// Set variable to store it\r",
									"pm.collectionVariables.set(\"nextPage\", nextPage);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"body contains Link header last\",function(){\r",
									"// Parse Link header \r",
									"const link = pm.response.headers.get(\"Link\");\r",
									"\r",
									"// Extract next page URL \r",
									"const links = link.split(\", \"); \r",
									"const lastLink = links[links.length - 1];\r",
									"\r",
									"const lastPage = lastLink.match(/<(.*?)>/)[1];\r",
									"\r",
									"// Set variable to store it\r",
									"pm.collectionVariables.set(\"lastPage\", lastPage);\r",
									"});\r",
									"\r",
									"pm.test\r",
									"\r",
									"//////////////////////////////////////////////////////////\r",
									"\r",
									"/*\r",
									"// to print the response in the json format string \r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"\r",
									"// to search the particular text in the jason response\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});\r",
									"\r",
									"\r",
									"// to make the value is equal to particular value it si used to check \r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"\r",
									"\r",
									"// it is used ot check the whole body in the form of string \r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check response time less than particular \r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// to check the status code name \r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"// to convert the variable form the xml foramt firstly we convert the xml format into the jason format \r",
									"var jsonObject = xml2Json(responseBody);\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// per_page=1 means that in one page only record must be there ie one repository details"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.github.com/users/SumitKaushik1/repos?per_page=1",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"users",
								"SumitKaushik1",
								"repos"
							],
							"query": [
								{
									"key": "per_page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2.List _of_all_repository_support_pagination_to_check_next_page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"}\r",
									"\r",
									"var jsonResponse=pm.response.json();\r",
									"\r",
									"pm.test(\"schema validate\",function(){\r",
									"    pm.expect(tv4.validate(jsonResponse,schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"//////////////////////////////////////////////////////////\r",
									"\r",
									"/*\r",
									"// to print the response in the json format string \r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"\r",
									"// to search the particular text in the jason response\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});\r",
									"\r",
									"\r",
									"// to make the value is equal to particular value it si used to check \r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"\r",
									"\r",
									"// it is used ot check the whole body in the form of string \r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check response time less than particular \r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// to check the status code name \r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"// to convert the variable form the xml foramt firstly we convert the xml format into the jason format \r",
									"var jsonObject = xml2Json(responseBody);\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{nextPage}}",
							"host": [
								"{{nextPage}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.3.List _of_all_repository_support_pagination_to_check_last_page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema={\r",
									"  \"type\": \"array\",\r",
									"  \"items\": {\r",
									"    \"title\": \"Minimal Repository\",\r",
									"    \"description\": \"Minimal Repository\",\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"      \"id\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          1296269\r",
									"        ]\r",
									"      },\r",
									"      \"node_id\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"        ]\r",
									"      },\r",
									"      \"name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"full_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"owner\": {\r",
									"        \"title\": \"Simple User\",\r",
									"        \"description\": \"A GitHub user.\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"name\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"email\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ]\r",
									"          },\r",
									"          \"login\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"id\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"examples\": [\r",
									"              1\r",
									"            ]\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"MDQ6VXNlcjE=\"\r",
									"            ]\r",
									"          },\r",
									"          \"avatar_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/images/error/octocat_happy.gif\"\r",
									"            ]\r",
									"          },\r",
									"          \"gravatar_id\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"examples\": [\r",
									"              \"41d064eb2195891e12d0413f63227ea7\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://github.com/octocat\"\r",
									"            ]\r",
									"          },\r",
									"          \"followers_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/followers\"\r",
									"            ]\r",
									"          },\r",
									"          \"following_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"            ]\r",
									"          },\r",
									"          \"gists_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"            ]\r",
									"          },\r",
									"          \"starred_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"            ]\r",
									"          },\r",
									"          \"subscriptions_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/subscriptions\"\r",
									"            ]\r",
									"          },\r",
									"          \"organizations_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/orgs\"\r",
									"            ]\r",
									"          },\r",
									"          \"repos_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/repos\"\r",
									"            ]\r",
									"          },\r",
									"          \"events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"            ]\r",
									"          },\r",
									"          \"received_events_url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/users/octocat/received_events\"\r",
									"            ]\r",
									"          },\r",
									"          \"type\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"User\"\r",
									"            ]\r",
									"          },\r",
									"          \"site_admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"starred_at\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"            ]\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"avatar_url\",\r",
									"          \"events_url\",\r",
									"          \"followers_url\",\r",
									"          \"following_url\",\r",
									"          \"gists_url\",\r",
									"          \"gravatar_id\",\r",
									"          \"html_url\",\r",
									"          \"id\",\r",
									"          \"node_id\",\r",
									"          \"login\",\r",
									"          \"organizations_url\",\r",
									"          \"received_events_url\",\r",
									"          \"repos_url\",\r",
									"          \"site_admin\",\r",
									"          \"starred_url\",\r",
									"          \"subscriptions_url\",\r",
									"          \"type\",\r",
									"          \"url\"\r",
									"        ]\r",
									"      },\r",
									"      \"private\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"html_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://github.com/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"description\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"examples\": [\r",
									"          \"This your first repo!\"\r",
									"        ]\r",
									"      },\r",
									"      \"fork\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"        ]\r",
									"      },\r",
									"      \"archive_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"        ]\r",
									"      },\r",
									"      \"assignees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"        ]\r",
									"      },\r",
									"      \"blobs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"branches_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"        ]\r",
									"      },\r",
									"      \"collaborators_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"        ]\r",
									"      },\r",
									"      \"comments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"compare_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contents_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"        ]\r",
									"      },\r",
									"      \"contributors_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"        ]\r",
									"      },\r",
									"      \"deployments_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"        ]\r",
									"      },\r",
									"      \"downloads_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"        ]\r",
									"      },\r",
									"      \"events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_commits_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_refs_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"git_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"issue_comment_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issue_events_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"issues_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"keys_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"labels_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"        ]\r",
									"      },\r",
									"      \"languages_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"        ]\r",
									"      },\r",
									"      \"merges_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"        ]\r",
									"      },\r",
									"      \"milestones_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"notifications_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"        ]\r",
									"      },\r",
									"      \"pulls_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"        ]\r",
									"      },\r",
									"      \"releases_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"        ]\r",
									"      },\r",
									"      \"ssh_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"stargazers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"        ]\r",
									"      },\r",
									"      \"statuses_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscribers_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"        ]\r",
									"      },\r",
									"      \"subscription_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"        ]\r",
									"      },\r",
									"      \"tags_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"        ]\r",
									"      },\r",
									"      \"teams_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"        ]\r",
									"      },\r",
									"      \"trees_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"        ]\r",
									"      },\r",
									"      \"clone_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"mirror_url\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"hooks_url\": {\r",
									"        \"type\": \"string\",\r",
									"        \"format\": \"uri\",\r",
									"        \"examples\": [\r",
									"          \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"        ]\r",
									"      },\r",
									"      \"svn_url\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"homepage\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"language\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ]\r",
									"      },\r",
									"      \"forks_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"stargazers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"watchers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"size\": {\r",
									"        \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"default_branch\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"open_issues_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"is_template\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"topics\": {\r",
									"        \"type\": \"array\",\r",
									"        \"items\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"has_issues\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_projects\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_wiki\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_pages\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_downloads\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"has_discussions\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"archived\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"disabled\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"visibility\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"pushed_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:06:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"created_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:01:12Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"updated_at\": {\r",
									"        \"type\": [\r",
									"          \"string\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"format\": \"date-time\",\r",
									"        \"examples\": [\r",
									"          \"2011-01-26T19:14:43Z\"\r",
									"        ]\r",
									"      },\r",
									"      \"permissions\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"admin\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"maintain\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"push\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"triage\": {\r",
									"            \"type\": \"boolean\"\r",
									"          },\r",
									"          \"pull\": {\r",
									"            \"type\": \"boolean\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"role_name\": {\r",
									"        \"type\": \"string\",\r",
									"        \"examples\": [\r",
									"          \"admin\"\r",
									"        ]\r",
									"      },\r",
									"      \"temp_clone_token\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"delete_branch_on_merge\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"subscribers_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"network_count\": {\r",
									"        \"type\": \"integer\"\r",
									"      },\r",
									"      \"code_of_conduct\": {\r",
									"        \"title\": \"Code Of Conduct\",\r",
									"        \"description\": \"Code Of Conduct\",\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"Contributor Covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\",\r",
									"            \"format\": \"uri\",\r",
									"            \"examples\": [\r",
									"              \"https://api.github.com/codes_of_conduct/contributor_covenant\"\r",
									"            ]\r",
									"          },\r",
									"          \"body\": {\r",
									"            \"type\": \"string\",\r",
									"            \"examples\": [\r",
									"              \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\"\r",
									"            ]\r",
									"          },\r",
									"          \"html_url\": {\r",
									"            \"type\": [\r",
									"              \"string\",\r",
									"              \"null\"\r",
									"            ],\r",
									"            \"format\": \"uri\"\r",
									"          }\r",
									"        },\r",
									"        \"required\": [\r",
									"          \"url\",\r",
									"          \"html_url\",\r",
									"          \"key\",\r",
									"          \"name\"\r",
									"        ]\r",
									"      },\r",
									"      \"license\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"key\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"name\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"spdx_id\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"url\": {\r",
									"            \"type\": \"string\"\r",
									"          },\r",
									"          \"node_id\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        }\r",
									"      },\r",
									"      \"forks\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"open_issues\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"watchers\": {\r",
									"        \"type\": \"integer\",\r",
									"        \"examples\": [\r",
									"          0\r",
									"        ]\r",
									"      },\r",
									"      \"allow_forking\": {\r",
									"        \"type\": \"boolean\"\r",
									"      },\r",
									"      \"web_commit_signoff_required\": {\r",
									"        \"type\": \"boolean\",\r",
									"        \"examples\": [\r",
									"          false\r",
									"        ]\r",
									"      },\r",
									"      \"security_and_analysis\": {\r",
									"        \"type\": [\r",
									"          \"object\",\r",
									"          \"null\"\r",
									"        ],\r",
									"        \"properties\": {\r",
									"          \"advanced_security\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"dependabot_security_updates\": {\r",
									"            \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          },\r",
									"          \"secret_scanning_push_protection\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"              \"status\": {\r",
									"                \"type\": \"string\",\r",
									"                \"enum\": [\r",
									"                  \"enabled\",\r",
									"                  \"disabled\"\r",
									"                ]\r",
									"              }\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"required\": [\r",
									"      \"archive_url\",\r",
									"      \"assignees_url\",\r",
									"      \"blobs_url\",\r",
									"      \"branches_url\",\r",
									"      \"collaborators_url\",\r",
									"      \"comments_url\",\r",
									"      \"commits_url\",\r",
									"      \"compare_url\",\r",
									"      \"contents_url\",\r",
									"      \"contributors_url\",\r",
									"      \"deployments_url\",\r",
									"      \"description\",\r",
									"      \"downloads_url\",\r",
									"      \"events_url\",\r",
									"      \"fork\",\r",
									"      \"forks_url\",\r",
									"      \"full_name\",\r",
									"      \"git_commits_url\",\r",
									"      \"git_refs_url\",\r",
									"      \"git_tags_url\",\r",
									"      \"hooks_url\",\r",
									"      \"html_url\",\r",
									"      \"id\",\r",
									"      \"node_id\",\r",
									"      \"issue_comment_url\",\r",
									"      \"issue_events_url\",\r",
									"      \"issues_url\",\r",
									"      \"keys_url\",\r",
									"      \"labels_url\",\r",
									"      \"languages_url\",\r",
									"      \"merges_url\",\r",
									"      \"milestones_url\",\r",
									"      \"name\",\r",
									"      \"notifications_url\",\r",
									"      \"owner\",\r",
									"      \"private\",\r",
									"      \"pulls_url\",\r",
									"      \"releases_url\",\r",
									"      \"stargazers_url\",\r",
									"      \"statuses_url\",\r",
									"      \"subscribers_url\",\r",
									"      \"subscription_url\",\r",
									"      \"tags_url\",\r",
									"      \"teams_url\",\r",
									"      \"trees_url\",\r",
									"      \"url\"\r",
									"    ]\r",
									"  }\r",
									"}\r",
									"\r",
									"var jsonResponse=pm.response.json();\r",
									"\r",
									"pm.test(\"schema validate\",function(){\r",
									"    pm.expect(tv4.validate(jsonResponse,schema)).to.be.true;\r",
									"})\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"});\r",
									"\r",
									"//////////////////////////////////////////////////////////\r",
									"\r",
									"/*\r",
									"// to print the response in the json format string \r",
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
									"    console.log(response.json());\r",
									"});\r",
									"\r",
									"// to search the particular text in the jason response\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"string_you_want_to_search\");\r",
									"});\r",
									"\r",
									"\r",
									"// to make the value is equal to particular value it si used to check \r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value).to.eql(100);\r",
									"});\r",
									"\r",
									"\r",
									"// it is used ot check the whole body in the form of string \r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"response_body_string\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check response time less than particular \r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"// to check the status code name \r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"// to convert the variable form the xml foramt firstly we convert the xml format into the jason format \r",
									"var jsonObject = xml2Json(responseBody);\r",
									"*/\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{lastPage}}",
							"host": [
								"{{lastPage}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2.Create_REPOSITORY",
			"item": [
				{
					"name": "1.create_Repository_positive_200",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//created status code 201\r",
									"pm.test(\"status code 201 created\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									" })\r",
									"\r",
									"\r",
									"\r",
									"var schema={\r",
									"  \"title\": \"Repository\",\r",
									"  \"description\": \"A repository on GitHub.\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"description\": \"Unique identifier of the repository\",\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        42\r",
									"      ]\r",
									"    },\r",
									"    \"node_id\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"      ]\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"description\": \"The name of the repository.\",\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"Team Environment\"\r",
									"      ]\r",
									"    },\r",
									"    \"full_name\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"license\": {\r",
									"      \"anyOf\": [\r",
									"        {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        {\r",
									"          \"title\": \"License Simple\",\r",
									"          \"description\": \"License Simple\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"key\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"mit\"\r",
									"              ]\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MIT License\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/licenses/mit\"\r",
									"              ]\r",
									"            },\r",
									"            \"spdx_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"MIT\"\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDc6TGljZW5zZW1pdA==\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"key\",\r",
									"            \"name\",\r",
									"            \"url\",\r",
									"            \"spdx_id\",\r",
									"            \"node_id\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"organization\": {\r",
									"      \"anyOf\": [\r",
									"        {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        {\r",
									"          \"title\": \"Simple User\",\r",
									"          \"description\": \"A GitHub user.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"name\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"email\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"login\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                1\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDQ6VXNlcjE=\"\r",
									"              ]\r",
									"            },\r",
									"            \"avatar_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/images/error/octocat_happy.gif\"\r",
									"              ]\r",
									"            },\r",
									"            \"gravatar_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"41d064eb2195891e12d0413f63227ea7\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"followers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/followers\"\r",
									"              ]\r",
									"            },\r",
									"            \"following_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"              ]\r",
									"            },\r",
									"            \"gists_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"starred_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscriptions_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/subscriptions\"\r",
									"              ]\r",
									"            },\r",
									"            \"organizations_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/orgs\"\r",
									"              ]\r",
									"            },\r",
									"            \"repos_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/repos\"\r",
									"              ]\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"              ]\r",
									"            },\r",
									"            \"received_events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/received_events\"\r",
									"              ]\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"User\"\r",
									"              ]\r",
									"            },\r",
									"            \"site_admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"starred_at\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"avatar_url\",\r",
									"            \"events_url\",\r",
									"            \"followers_url\",\r",
									"            \"following_url\",\r",
									"            \"gists_url\",\r",
									"            \"gravatar_id\",\r",
									"            \"html_url\",\r",
									"            \"id\",\r",
									"            \"node_id\",\r",
									"            \"login\",\r",
									"            \"organizations_url\",\r",
									"            \"received_events_url\",\r",
									"            \"repos_url\",\r",
									"            \"site_admin\",\r",
									"            \"starred_url\",\r",
									"            \"subscriptions_url\",\r",
									"            \"type\",\r",
									"            \"url\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"forks\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"permissions\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"pull\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"triage\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"push\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"maintain\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"admin\",\r",
									"        \"pull\",\r",
									"        \"push\"\r",
									"      ]\r",
									"    },\r",
									"    \"owner\": {\r",
									"      \"title\": \"Simple User\",\r",
									"      \"description\": \"A GitHub user.\",\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"login\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"id\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            1\r",
									"          ]\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"MDQ6VXNlcjE=\"\r",
									"          ]\r",
									"        },\r",
									"        \"avatar_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/images/error/octocat_happy.gif\"\r",
									"          ]\r",
									"        },\r",
									"        \"gravatar_id\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"examples\": [\r",
									"            \"41d064eb2195891e12d0413f63227ea7\"\r",
									"          ]\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"followers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/followers\"\r",
									"          ]\r",
									"        },\r",
									"        \"following_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"          ]\r",
									"        },\r",
									"        \"gists_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"starred_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscriptions_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/subscriptions\"\r",
									"          ]\r",
									"        },\r",
									"        \"organizations_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/orgs\"\r",
									"          ]\r",
									"        },\r",
									"        \"repos_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/repos\"\r",
									"          ]\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"          ]\r",
									"        },\r",
									"        \"received_events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/received_events\"\r",
									"          ]\r",
									"        },\r",
									"        \"type\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"User\"\r",
									"          ]\r",
									"        },\r",
									"        \"site_admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"starred_at\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"avatar_url\",\r",
									"        \"events_url\",\r",
									"        \"followers_url\",\r",
									"        \"following_url\",\r",
									"        \"gists_url\",\r",
									"        \"gravatar_id\",\r",
									"        \"html_url\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"login\",\r",
									"        \"organizations_url\",\r",
									"        \"received_events_url\",\r",
									"        \"repos_url\",\r",
									"        \"site_admin\",\r",
									"        \"starred_url\",\r",
									"        \"subscriptions_url\",\r",
									"        \"type\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"private\": {\r",
									"      \"description\": \"Whether the repository is private or public.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"html_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"examples\": [\r",
									"        \"This your first repo!\"\r",
									"      ]\r",
									"    },\r",
									"    \"fork\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"archive_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"      ]\r",
									"    },\r",
									"    \"assignees_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"      ]\r",
									"    },\r",
									"    \"blobs_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"branches_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"      ]\r",
									"    },\r",
									"    \"collaborators_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"      ]\r",
									"    },\r",
									"    \"comments_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"commits_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"compare_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"      ]\r",
									"    },\r",
									"    \"contents_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"      ]\r",
									"    },\r",
									"    \"contributors_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"      ]\r",
									"    },\r",
									"    \"deployments_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"      ]\r",
									"    },\r",
									"    \"downloads_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"      ]\r",
									"    },\r",
									"    \"events_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"      ]\r",
									"    },\r",
									"    \"forks_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_commits_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_refs_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_tags_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"git:github.com/octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"issue_comment_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"issue_events_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"issues_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"keys_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"      ]\r",
									"    },\r",
									"    \"labels_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"      ]\r",
									"    },\r",
									"    \"languages_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"      ]\r",
									"    },\r",
									"    \"merges_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"      ]\r",
									"    },\r",
									"    \"milestones_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"notifications_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"      ]\r",
									"    },\r",
									"    \"pulls_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"releases_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"      ]\r",
									"    },\r",
									"    \"ssh_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"git@github.com:octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"stargazers_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"      ]\r",
									"    },\r",
									"    \"statuses_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"subscribers_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"      ]\r",
									"    },\r",
									"    \"subscription_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"      ]\r",
									"    },\r",
									"    \"tags_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"      ]\r",
									"    },\r",
									"    \"teams_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"      ]\r",
									"    },\r",
									"    \"trees_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"clone_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com/octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"mirror_url\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"git:git.example.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"hooks_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"      ]\r",
									"    },\r",
									"    \"svn_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://svn.github.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"homepage\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com\"\r",
									"      ]\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ]\r",
									"    },\r",
									"    \"forks_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        9\r",
									"      ]\r",
									"    },\r",
									"    \"stargazers_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        80\r",
									"      ]\r",
									"    },\r",
									"    \"watchers_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        80\r",
									"      ]\r",
									"    },\r",
									"    \"size\": {\r",
									"      \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        108\r",
									"      ]\r",
									"    },\r",
									"    \"default_branch\": {\r",
									"      \"description\": \"The default branch of the repository.\",\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"master\"\r",
									"      ]\r",
									"    },\r",
									"    \"open_issues_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        0\r",
									"      ]\r",
									"    },\r",
									"    \"is_template\": {\r",
									"      \"description\": \"Whether this repository acts as a template that can be used to generate new repositories.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"topics\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {\r",
									"        \"type\": \"string\"\r",
									"      }\r",
									"    },\r",
									"    \"has_issues\": {\r",
									"      \"description\": \"Whether issues are enabled.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_projects\": {\r",
									"      \"description\": \"Whether projects are enabled.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_wiki\": {\r",
									"      \"description\": \"Whether the wiki is enabled.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_pages\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_downloads\": {\r",
									"      \"description\": \"Whether downloads are enabled.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"deprecated\": true,\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_discussions\": {\r",
									"      \"description\": \"Whether discussions are enabled.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"archived\": {\r",
									"      \"description\": \"Whether the repository is archived.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"disabled\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"description\": \"Returns whether or not this repository disabled.\"\r",
									"    },\r",
									"    \"visibility\": {\r",
									"      \"description\": \"The repository visibility: public, private, or internal.\",\r",
									"      \"default\": \"public\",\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"pushed_at\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:06:43Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"created_at\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:01:12Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"updated_at\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:14:43Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_rebase_merge\": {\r",
									"      \"description\": \"Whether to allow rebase merges for pull requests.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"template_repository\": {\r",
									"      \"type\": [\r",
									"        \"object\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"full_name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"owner\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"login\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"avatar_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"gravatar_id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"followers_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"following_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"gists_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"starred_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subscriptions_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"organizations_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"repos_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"received_events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"site_admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"private\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"description\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"fork\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"archive_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"assignees_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"blobs_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"branches_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"collaborators_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"comments_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"commits_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"compare_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"contents_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"contributors_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"deployments_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"downloads_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"forks_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"git_commits_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"git_refs_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"git_tags_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"git_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"issue_comment_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"issue_events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"issues_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"keys_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"labels_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"languages_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"merges_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"milestones_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"notifications_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pulls_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"releases_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"ssh_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"stargazers_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"statuses_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"subscribers_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"subscription_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"tags_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"teams_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"trees_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"clone_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"mirror_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"hooks_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"svn_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"homepage\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"forks_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"stargazers_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"watchers_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"size\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"default_branch\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"open_issues_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"is_template\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"topics\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        },\r",
									"        \"has_issues\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_projects\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_wiki\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_pages\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_downloads\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"archived\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"disabled\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"visibility\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pushed_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"permissions\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"maintain\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"push\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"triage\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"pull\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"allow_rebase_merge\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"temp_clone_token\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"allow_squash_merge\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"allow_auto_merge\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"delete_branch_on_merge\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"allow_update_branch\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"use_squash_pr_title_as_default\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"squash_merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"COMMIT_OR_PR_TITLE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"        },\r",
									"        \"squash_merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"COMMIT_MESSAGES\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"MERGE_MESSAGE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"        },\r",
									"        \"merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"PR_TITLE\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"allow_merge_commit\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"subscribers_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"network_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      }\r",
									"    },\r",
									"    \"temp_clone_token\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"allow_squash_merge\": {\r",
									"      \"description\": \"Whether to allow squash merges for pull requests.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"allow_auto_merge\": {\r",
									"      \"description\": \"Whether to allow Auto-merge to be used on pull requests.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"delete_branch_on_merge\": {\r",
									"      \"description\": \"Whether to delete head branches when pull requests are merged\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"allow_update_branch\": {\r",
									"      \"description\": \"Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"use_squash_pr_title_as_default\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"description\": \"Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.\",\r",
									"      \"default\": false,\r",
									"      \"deprecated\": true\r",
									"    },\r",
									"    \"squash_merge_commit_title\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_TITLE\",\r",
									"        \"COMMIT_OR_PR_TITLE\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"    },\r",
									"    \"squash_merge_commit_message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_BODY\",\r",
									"        \"COMMIT_MESSAGES\",\r",
									"        \"BLANK\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"    },\r",
									"    \"merge_commit_title\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_TITLE\",\r",
									"        \"MERGE_MESSAGE\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"    },\r",
									"    \"merge_commit_message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_BODY\",\r",
									"        \"PR_TITLE\",\r",
									"        \"BLANK\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"    },\r",
									"    \"allow_merge_commit\": {\r",
									"      \"description\": \"Whether to allow merge commits for pull requests.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"allow_forking\": {\r",
									"      \"description\": \"Whether to allow forking this repo\",\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"web_commit_signoff_required\": {\r",
									"      \"description\": \"Whether to require contributors to sign off on web-based commits\",\r",
									"      \"default\": false,\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"subscribers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"network_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"open_issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"master_branch\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"starred_at\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"\\\"2020-07-09T00:17:42Z\\\"\"\r",
									"      ]\r",
									"    },\r",
									"    \"anonymous_access_enabled\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"description\": \"Whether anonymous git access is enabled for this repository\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"archive_url\",\r",
									"    \"assignees_url\",\r",
									"    \"blobs_url\",\r",
									"    \"branches_url\",\r",
									"    \"collaborators_url\",\r",
									"    \"comments_url\",\r",
									"    \"commits_url\",\r",
									"    \"compare_url\",\r",
									"    \"contents_url\",\r",
									"    \"contributors_url\",\r",
									"    \"deployments_url\",\r",
									"    \"description\",\r",
									"    \"downloads_url\",\r",
									"    \"events_url\",\r",
									"    \"fork\",\r",
									"    \"forks_url\",\r",
									"    \"full_name\",\r",
									"    \"git_commits_url\",\r",
									"    \"git_refs_url\",\r",
									"    \"git_tags_url\",\r",
									"    \"hooks_url\",\r",
									"    \"html_url\",\r",
									"    \"id\",\r",
									"    \"node_id\",\r",
									"    \"issue_comment_url\",\r",
									"    \"issue_events_url\",\r",
									"    \"issues_url\",\r",
									"    \"keys_url\",\r",
									"    \"labels_url\",\r",
									"    \"languages_url\",\r",
									"    \"merges_url\",\r",
									"    \"milestones_url\",\r",
									"    \"name\",\r",
									"    \"notifications_url\",\r",
									"    \"owner\",\r",
									"    \"private\",\r",
									"    \"pulls_url\",\r",
									"    \"releases_url\",\r",
									"    \"stargazers_url\",\r",
									"    \"statuses_url\",\r",
									"    \"subscribers_url\",\r",
									"    \"subscription_url\",\r",
									"    \"tags_url\",\r",
									"    \"teams_url\",\r",
									"    \"trees_url\",\r",
									"    \"url\",\r",
									"    \"clone_url\",\r",
									"    \"default_branch\",\r",
									"    \"forks\",\r",
									"    \"forks_count\",\r",
									"    \"git_url\",\r",
									"    \"has_downloads\",\r",
									"    \"has_issues\",\r",
									"    \"has_projects\",\r",
									"    \"has_wiki\",\r",
									"    \"has_pages\",\r",
									"    \"homepage\",\r",
									"    \"language\",\r",
									"    \"archived\",\r",
									"    \"disabled\",\r",
									"    \"mirror_url\",\r",
									"    \"open_issues\",\r",
									"    \"open_issues_count\",\r",
									"    \"license\",\r",
									"    \"pushed_at\",\r",
									"    \"size\",\r",
									"    \"ssh_url\",\r",
									"    \"stargazers_count\",\r",
									"    \"svn_url\",\r",
									"    \"watchers\",\r",
									"    \"watchers_count\",\r",
									"    \"created_at\",\r",
									"    \"updated_at\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"//valid jason\r",
									" // it checks the given schema to the respone json converted to schema that matched the user given schema\r",
									"pm.test(\"validate jasonschema\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"\r",
									"// to check it has the body or not\r",
									"pm.test(\"response  body\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"\r",
									"\r",
									"//first id should not be null \r",
									"pm.test(\"id  not null\", function () {\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									"// console.log(jasonData['id']);\r",
									" pm.expect(jasonData['id']).not.to.be.null;\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"//name of the repo must be hello-world\r",
									"pm.test(\"Name key in Repo\", function () {\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									" pm.expect(jasonData['name']).to.eql('Hello-orl')\r",
									"});\r",
									"\r",
									"\r",
									"// repo must be private \r",
									"pm.test(\"Check if the repository is private\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData['private']).to.be.true;\r",
									"});\r",
									"\r",
									"\r",
									"// to check the particular key in the respone ie the key(not value)\r",
									"pm.test(\"Check if a key exists in the response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('full_name'); // Replace 'yourKey' with the key you want to check\r",
									"    pm.expect(jsonData).to.have.property('url'); // Replace 'yourKey' with the key you want to check\r",
									"    pm.expect(jsonData).to.have.property('description'); // Replace 'yourKey' with the key you want to check\r",
									"});\r",
									"\r",
									"// to check the content-type key in the heasder must have\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"//to check respone has no error \r",
									"pm.test(\"Response has no error\", function () {\r",
									" pm.response.to.not.be.error;\r",
									"});\r",
									"\r",
									"//performance testing \r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"pm.test(\"Check Owner\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.owner.login).to.equal(\"SumitKaushik1\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1.create_Repository_negative_without_basic_auth_request_fail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//bearer token is  not given in authorization\r",
									"pm.test(\"status code 401 Requires authentication\",function(){\r",
									"    pm.response.to.have.status(401);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/vnd.github+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.create_Repository_negative_422",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//when again the same named repository is made\r",
									"pm.test(\"status code 422 Validation failed, or the endpoint has been spammed.\",function(){\r",
									"    pm.response.to.have.status(422);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.create_Repository_negative_404",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo\",jsonReq.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//wrong url \r",
									"pm.test(\"status code 404 resource not found\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repo",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repo"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.create_Repository_negative__401",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//bearer token is  not given in authorization\r",
									"pm.test(\"status code 401 Requires authentication\",function(){\r",
									"    pm.response.to.have.status(401);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.create_Repository_negative_403",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//bearer token is generated to make only public repo but you want to make private repo which is not allowed\r",
									"//IN BODY YOU MAKE \"private:true\"\r",
									"pm.test(\"status code 403 forbidden access\",function(){\r",
									"    pm.response.to.have.status(403);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubTokenForOnlyPubliic}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.create_Repository_negative_400",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//pm.request.body.raw will give json object (json extedsion ) JSON.parse will convert into the javascript object \r",
									"var jsonReq = JSON.parse(pm.request.body.raw);\r",
									"console.log(jsonReq)\r",
									"pm.collectionVariables.set(\"modify_repo_name\",jsonReq.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//if the body of the request does contain proper json format then it server will return bad request \r",
									"pm.test(\"status code 400 bad request\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hello-orl\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": true,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}\r\n--",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/user/repos",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3.Get_Repository",
			"item": [
				{
					"name": "1.Get_Repository_postive_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "Accept: application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.Get_Repository_negative_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//in url repo name is given wrong \r",
									"pm.test(\"Status code is 404 resource not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "Accept: application/vnd.github+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik/sumit",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik",
								"sumit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4.Update_Respository",
			"item": [
				{
					"name": "1.Update_Repository_postitive_200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var schema={\r",
									"  \"title\": \"Full Repository\",\r",
									"  \"description\": \"Full Repository\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        1296269\r",
									"      ]\r",
									"    },\r",
									"    \"node_id\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"      ]\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"full_name\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"owner\": {\r",
									"      \"title\": \"Simple User\",\r",
									"      \"description\": \"A GitHub user.\",\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"email\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"login\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"id\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            1\r",
									"          ]\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"MDQ6VXNlcjE=\"\r",
									"          ]\r",
									"        },\r",
									"        \"avatar_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/images/error/octocat_happy.gif\"\r",
									"          ]\r",
									"        },\r",
									"        \"gravatar_id\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"examples\": [\r",
									"            \"41d064eb2195891e12d0413f63227ea7\"\r",
									"          ]\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat\"\r",
									"          ]\r",
									"        },\r",
									"        \"followers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/followers\"\r",
									"          ]\r",
									"        },\r",
									"        \"following_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"          ]\r",
									"        },\r",
									"        \"gists_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"starred_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscriptions_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/subscriptions\"\r",
									"          ]\r",
									"        },\r",
									"        \"organizations_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/orgs\"\r",
									"          ]\r",
									"        },\r",
									"        \"repos_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/repos\"\r",
									"          ]\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"          ]\r",
									"        },\r",
									"        \"received_events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/users/octocat/received_events\"\r",
									"          ]\r",
									"        },\r",
									"        \"type\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"User\"\r",
									"          ]\r",
									"        },\r",
									"        \"site_admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"starred_at\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"avatar_url\",\r",
									"        \"events_url\",\r",
									"        \"followers_url\",\r",
									"        \"following_url\",\r",
									"        \"gists_url\",\r",
									"        \"gravatar_id\",\r",
									"        \"html_url\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"login\",\r",
									"        \"organizations_url\",\r",
									"        \"received_events_url\",\r",
									"        \"repos_url\",\r",
									"        \"site_admin\",\r",
									"        \"starred_url\",\r",
									"        \"subscriptions_url\",\r",
									"        \"type\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"private\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"html_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"examples\": [\r",
									"        \"This your first repo!\"\r",
									"      ]\r",
									"    },\r",
									"    \"fork\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"archive_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"      ]\r",
									"    },\r",
									"    \"assignees_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"      ]\r",
									"    },\r",
									"    \"blobs_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"branches_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"      ]\r",
									"    },\r",
									"    \"collaborators_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"      ]\r",
									"    },\r",
									"    \"comments_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"commits_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"compare_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"      ]\r",
									"    },\r",
									"    \"contents_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"      ]\r",
									"    },\r",
									"    \"contributors_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"      ]\r",
									"    },\r",
									"    \"deployments_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"      ]\r",
									"    },\r",
									"    \"downloads_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"      ]\r",
									"    },\r",
									"    \"events_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"      ]\r",
									"    },\r",
									"    \"forks_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_commits_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_refs_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_tags_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"git_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"git:github.com/octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"issue_comment_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"issue_events_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"issues_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"keys_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"      ]\r",
									"    },\r",
									"    \"labels_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"      ]\r",
									"    },\r",
									"    \"languages_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"      ]\r",
									"    },\r",
									"    \"merges_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"      ]\r",
									"    },\r",
									"    \"milestones_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"notifications_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"      ]\r",
									"    },\r",
									"    \"pulls_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"      ]\r",
									"    },\r",
									"    \"releases_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"      ]\r",
									"    },\r",
									"    \"ssh_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"git@github.com:octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"stargazers_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"      ]\r",
									"    },\r",
									"    \"statuses_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"subscribers_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"      ]\r",
									"    },\r",
									"    \"subscription_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"      ]\r",
									"    },\r",
									"    \"tags_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"      ]\r",
									"    },\r",
									"    \"teams_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"      ]\r",
									"    },\r",
									"    \"trees_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"      ]\r",
									"    },\r",
									"    \"clone_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com/octocat/Hello-World.git\"\r",
									"      ]\r",
									"    },\r",
									"    \"mirror_url\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"git:git.example.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"hooks_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"      ]\r",
									"    },\r",
									"    \"svn_url\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://svn.github.com/octocat/Hello-World\"\r",
									"      ]\r",
									"    },\r",
									"    \"homepage\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"format\": \"uri\",\r",
									"      \"examples\": [\r",
									"        \"https://github.com\"\r",
									"      ]\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ]\r",
									"    },\r",
									"    \"forks_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        9\r",
									"      ]\r",
									"    },\r",
									"    \"stargazers_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        80\r",
									"      ]\r",
									"    },\r",
									"    \"watchers_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        80\r",
									"      ]\r",
									"    },\r",
									"    \"size\": {\r",
									"      \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        108\r",
									"      ]\r",
									"    },\r",
									"    \"default_branch\": {\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"master\"\r",
									"      ]\r",
									"    },\r",
									"    \"open_issues_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        0\r",
									"      ]\r",
									"    },\r",
									"    \"is_template\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"topics\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {\r",
									"        \"type\": \"string\"\r",
									"      },\r",
									"      \"examples\": [\r",
									"        \"octocat\",\r",
									"        \"atom\",\r",
									"        \"electron\",\r",
									"        \"API\"\r",
									"      ]\r",
									"    },\r",
									"    \"has_issues\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_projects\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_wiki\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_pages\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_downloads\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"has_discussions\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"archived\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"disabled\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"description\": \"Returns whether or not this repository disabled.\"\r",
									"    },\r",
									"    \"visibility\": {\r",
									"      \"description\": \"The repository visibility: public, private, or internal.\",\r",
									"      \"type\": \"string\",\r",
									"      \"examples\": [\r",
									"        \"public\"\r",
									"      ]\r",
									"    },\r",
									"    \"pushed_at\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:06:43Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"created_at\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:01:12Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"updated_at\": {\r",
									"      \"type\": \"string\",\r",
									"      \"format\": \"date-time\",\r",
									"      \"examples\": [\r",
									"        \"2011-01-26T19:14:43Z\"\r",
									"      ]\r",
									"    },\r",
									"    \"permissions\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"maintain\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"push\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"triage\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"pull\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"admin\",\r",
									"        \"pull\",\r",
									"        \"push\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_rebase_merge\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"template_repository\": {\r",
									"      \"anyOf\": [\r",
									"        {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        {\r",
									"          \"title\": \"Repository\",\r",
									"          \"description\": \"A repository on GitHub.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"description\": \"Unique identifier of the repository\",\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                42\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"              ]\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"description\": \"The name of the repository.\",\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"Team Environment\"\r",
									"              ]\r",
									"            },\r",
									"            \"full_name\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"octocat/Hello-World\"\r",
									"              ]\r",
									"            },\r",
									"            \"license\": {\r",
									"              \"anyOf\": [\r",
									"                {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                {\r",
									"                  \"title\": \"License Simple\",\r",
									"                  \"description\": \"License Simple\",\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"key\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"mit\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"name\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"MIT License\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"url\": {\r",
									"                      \"type\": [\r",
									"                        \"string\",\r",
									"                        \"null\"\r",
									"                      ],\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/licenses/mit\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"spdx_id\": {\r",
									"                      \"type\": [\r",
									"                        \"string\",\r",
									"                        \"null\"\r",
									"                      ],\r",
									"                      \"examples\": [\r",
									"                        \"MIT\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"node_id\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"MDc6TGljZW5zZW1pdA==\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"html_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\"\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"key\",\r",
									"                    \"name\",\r",
									"                    \"url\",\r",
									"                    \"spdx_id\",\r",
									"                    \"node_id\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"organization\": {\r",
									"              \"anyOf\": [\r",
									"                {\r",
									"                  \"type\": \"null\"\r",
									"                },\r",
									"                {\r",
									"                  \"title\": \"Simple User\",\r",
									"                  \"description\": \"A GitHub user.\",\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"name\": {\r",
									"                      \"type\": [\r",
									"                        \"string\",\r",
									"                        \"null\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"email\": {\r",
									"                      \"type\": [\r",
									"                        \"string\",\r",
									"                        \"null\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"login\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"octocat\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"id\": {\r",
									"                      \"type\": \"integer\",\r",
									"                      \"examples\": [\r",
									"                        1\r",
									"                      ]\r",
									"                    },\r",
									"                    \"node_id\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"MDQ6VXNlcjE=\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"avatar_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://github.com/images/error/octocat_happy.gif\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"gravatar_id\": {\r",
									"                      \"type\": [\r",
									"                        \"string\",\r",
									"                        \"null\"\r",
									"                      ],\r",
									"                      \"examples\": [\r",
									"                        \"41d064eb2195891e12d0413f63227ea7\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"html_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://github.com/octocat\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"followers_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/followers\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"following_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"gists_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"starred_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"subscriptions_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/subscriptions\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"organizations_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/orgs\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"repos_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/repos\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"events_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"received_events_url\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"format\": \"uri\",\r",
									"                      \"examples\": [\r",
									"                        \"https://api.github.com/users/octocat/received_events\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"type\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"User\"\r",
									"                      ]\r",
									"                    },\r",
									"                    \"site_admin\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"starred_at\": {\r",
									"                      \"type\": \"string\",\r",
									"                      \"examples\": [\r",
									"                        \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"                      ]\r",
									"                    }\r",
									"                  },\r",
									"                  \"required\": [\r",
									"                    \"avatar_url\",\r",
									"                    \"events_url\",\r",
									"                    \"followers_url\",\r",
									"                    \"following_url\",\r",
									"                    \"gists_url\",\r",
									"                    \"gravatar_id\",\r",
									"                    \"html_url\",\r",
									"                    \"id\",\r",
									"                    \"node_id\",\r",
									"                    \"login\",\r",
									"                    \"organizations_url\",\r",
									"                    \"received_events_url\",\r",
									"                    \"repos_url\",\r",
									"                    \"site_admin\",\r",
									"                    \"starred_url\",\r",
									"                    \"subscriptions_url\",\r",
									"                    \"type\",\r",
									"                    \"url\"\r",
									"                  ]\r",
									"                }\r",
									"              ]\r",
									"            },\r",
									"            \"forks\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"permissions\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"pull\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"triage\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"push\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"maintain\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"admin\",\r",
									"                \"pull\",\r",
									"                \"push\"\r",
									"              ]\r",
									"            },\r",
									"            \"owner\": {\r",
									"              \"title\": \"Simple User\",\r",
									"              \"description\": \"A GitHub user.\",\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"email\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"login\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\",\r",
									"                  \"examples\": [\r",
									"                    1\r",
									"                  ]\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MDQ6VXNlcjE=\"\r",
									"                  ]\r",
									"                },\r",
									"                \"avatar_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/images/error/octocat_happy.gif\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gravatar_id\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"examples\": [\r",
									"                    \"41d064eb2195891e12d0413f63227ea7\"\r",
									"                  ]\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"followers_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/followers\"\r",
									"                  ]\r",
									"                },\r",
									"                \"following_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gists_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"starred_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"subscriptions_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/subscriptions\"\r",
									"                  ]\r",
									"                },\r",
									"                \"organizations_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/orgs\"\r",
									"                  ]\r",
									"                },\r",
									"                \"repos_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/repos\"\r",
									"                  ]\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"received_events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/received_events\"\r",
									"                  ]\r",
									"                },\r",
									"                \"type\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"User\"\r",
									"                  ]\r",
									"                },\r",
									"                \"site_admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"starred_at\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"avatar_url\",\r",
									"                \"events_url\",\r",
									"                \"followers_url\",\r",
									"                \"following_url\",\r",
									"                \"gists_url\",\r",
									"                \"gravatar_id\",\r",
									"                \"html_url\",\r",
									"                \"id\",\r",
									"                \"node_id\",\r",
									"                \"login\",\r",
									"                \"organizations_url\",\r",
									"                \"received_events_url\",\r",
									"                \"repos_url\",\r",
									"                \"site_admin\",\r",
									"                \"starred_url\",\r",
									"                \"subscriptions_url\",\r",
									"                \"type\",\r",
									"                \"url\"\r",
									"              ]\r",
									"            },\r",
									"            \"private\": {\r",
									"              \"description\": \"Whether the repository is private or public.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat/Hello-World\"\r",
									"              ]\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"This your first repo!\"\r",
									"              ]\r",
									"            },\r",
									"            \"fork\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"              ]\r",
									"            },\r",
									"            \"archive_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"              ]\r",
									"            },\r",
									"            \"assignees_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"              ]\r",
									"            },\r",
									"            \"blobs_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"branches_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"              ]\r",
									"            },\r",
									"            \"collaborators_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"              ]\r",
									"            },\r",
									"            \"comments_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"commits_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"compare_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"              ]\r",
									"            },\r",
									"            \"contents_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"              ]\r",
									"            },\r",
									"            \"contributors_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"              ]\r",
									"            },\r",
									"            \"deployments_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"              ]\r",
									"            },\r",
									"            \"downloads_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"              ]\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"              ]\r",
									"            },\r",
									"            \"forks_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"              ]\r",
									"            },\r",
									"            \"git_commits_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"git_refs_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"git_tags_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"git_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"git:github.com/octocat/Hello-World.git\"\r",
									"              ]\r",
									"            },\r",
									"            \"issue_comment_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"issue_events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"issues_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"keys_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"labels_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"              ]\r",
									"            },\r",
									"            \"languages_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"              ]\r",
									"            },\r",
									"            \"merges_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"              ]\r",
									"            },\r",
									"            \"milestones_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"notifications_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"              ]\r",
									"            },\r",
									"            \"pulls_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"              ]\r",
									"            },\r",
									"            \"releases_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"ssh_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"git@github.com:octocat/Hello-World.git\"\r",
									"              ]\r",
									"            },\r",
									"            \"stargazers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"              ]\r",
									"            },\r",
									"            \"statuses_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscribers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscription_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"              ]\r",
									"            },\r",
									"            \"tags_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"              ]\r",
									"            },\r",
									"            \"teams_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"              ]\r",
									"            },\r",
									"            \"trees_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"              ]\r",
									"            },\r",
									"            \"clone_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat/Hello-World.git\"\r",
									"              ]\r",
									"            },\r",
									"            \"mirror_url\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"git:git.example.com/octocat/Hello-World\"\r",
									"              ]\r",
									"            },\r",
									"            \"hooks_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"              ]\r",
									"            },\r",
									"            \"svn_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://svn.github.com/octocat/Hello-World\"\r",
									"              ]\r",
									"            },\r",
									"            \"homepage\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com\"\r",
									"              ]\r",
									"            },\r",
									"            \"language\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"forks_count\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                9\r",
									"              ]\r",
									"            },\r",
									"            \"stargazers_count\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                80\r",
									"              ]\r",
									"            },\r",
									"            \"watchers_count\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                80\r",
									"              ]\r",
									"            },\r",
									"            \"size\": {\r",
									"              \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                108\r",
									"              ]\r",
									"            },\r",
									"            \"default_branch\": {\r",
									"              \"description\": \"The default branch of the repository.\",\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"master\"\r",
									"              ]\r",
									"            },\r",
									"            \"open_issues_count\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                0\r",
									"              ]\r",
									"            },\r",
									"            \"is_template\": {\r",
									"              \"description\": \"Whether this repository acts as a template that can be used to generate new repositories.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"topics\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {\r",
									"                \"type\": \"string\"\r",
									"              }\r",
									"            },\r",
									"            \"has_issues\": {\r",
									"              \"description\": \"Whether issues are enabled.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"has_projects\": {\r",
									"              \"description\": \"Whether projects are enabled.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"has_wiki\": {\r",
									"              \"description\": \"Whether the wiki is enabled.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"has_pages\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_downloads\": {\r",
									"              \"description\": \"Whether downloads are enabled.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"deprecated\": true,\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"has_discussions\": {\r",
									"              \"description\": \"Whether discussions are enabled.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"archived\": {\r",
									"              \"description\": \"Whether the repository is archived.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"disabled\": {\r",
									"              \"type\": \"boolean\",\r",
									"              \"description\": \"Returns whether or not this repository disabled.\"\r",
									"            },\r",
									"            \"visibility\": {\r",
									"              \"description\": \"The repository visibility: public, private, or internal.\",\r",
									"              \"default\": \"public\",\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"pushed_at\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"date-time\",\r",
									"              \"examples\": [\r",
									"                \"2011-01-26T19:06:43Z\"\r",
									"              ]\r",
									"            },\r",
									"            \"created_at\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"date-time\",\r",
									"              \"examples\": [\r",
									"                \"2011-01-26T19:01:12Z\"\r",
									"              ]\r",
									"            },\r",
									"            \"updated_at\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"date-time\",\r",
									"              \"examples\": [\r",
									"                \"2011-01-26T19:14:43Z\"\r",
									"              ]\r",
									"            },\r",
									"            \"allow_rebase_merge\": {\r",
									"              \"description\": \"Whether to allow rebase merges for pull requests.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"template_repository\": {\r",
									"              \"type\": [\r",
									"                \"object\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"full_name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"owner\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"login\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"id\": {\r",
									"                      \"type\": \"integer\"\r",
									"                    },\r",
									"                    \"node_id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"avatar_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"gravatar_id\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"html_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"followers_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"following_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"gists_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"starred_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"subscriptions_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"organizations_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"repos_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"events_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"received_events_url\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"type\": {\r",
									"                      \"type\": \"string\"\r",
									"                    },\r",
									"                    \"site_admin\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  }\r",
									"                },\r",
									"                \"private\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"description\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"fork\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"archive_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"assignees_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"blobs_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"branches_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"collaborators_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"comments_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"commits_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"compare_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"contents_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"contributors_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"deployments_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"downloads_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"forks_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"git_commits_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"git_refs_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"git_tags_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"git_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"issue_comment_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"issue_events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"issues_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"keys_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"labels_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"languages_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"merges_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"milestones_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"notifications_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"pulls_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"releases_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"ssh_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"stargazers_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"statuses_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"subscribers_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"subscription_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"tags_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"teams_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"trees_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"clone_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"mirror_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"hooks_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"svn_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"homepage\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"language\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"forks_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"stargazers_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"watchers_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"size\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"default_branch\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"open_issues_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"is_template\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"topics\": {\r",
									"                  \"type\": \"array\",\r",
									"                  \"items\": {\r",
									"                    \"type\": \"string\"\r",
									"                  }\r",
									"                },\r",
									"                \"has_issues\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"has_projects\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"has_wiki\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"has_pages\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"has_downloads\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"archived\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"disabled\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"visibility\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"pushed_at\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"created_at\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"updated_at\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"permissions\": {\r",
									"                  \"type\": \"object\",\r",
									"                  \"properties\": {\r",
									"                    \"admin\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"maintain\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"push\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"triage\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    },\r",
									"                    \"pull\": {\r",
									"                      \"type\": \"boolean\"\r",
									"                    }\r",
									"                  }\r",
									"                },\r",
									"                \"allow_rebase_merge\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"temp_clone_token\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"allow_squash_merge\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"allow_auto_merge\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"delete_branch_on_merge\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"allow_update_branch\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"use_squash_pr_title_as_default\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"squash_merge_commit_title\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"enum\": [\r",
									"                    \"PR_TITLE\",\r",
									"                    \"COMMIT_OR_PR_TITLE\"\r",
									"                  ],\r",
									"                  \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"                },\r",
									"                \"squash_merge_commit_message\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"enum\": [\r",
									"                    \"PR_BODY\",\r",
									"                    \"COMMIT_MESSAGES\",\r",
									"                    \"BLANK\"\r",
									"                  ],\r",
									"                  \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"                },\r",
									"                \"merge_commit_title\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"enum\": [\r",
									"                    \"PR_TITLE\",\r",
									"                    \"MERGE_MESSAGE\"\r",
									"                  ],\r",
									"                  \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"                },\r",
									"                \"merge_commit_message\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"enum\": [\r",
									"                    \"PR_BODY\",\r",
									"                    \"PR_TITLE\",\r",
									"                    \"BLANK\"\r",
									"                  ],\r",
									"                  \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"                },\r",
									"                \"allow_merge_commit\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"subscribers_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"network_count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              }\r",
									"            },\r",
									"            \"temp_clone_token\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"allow_squash_merge\": {\r",
									"              \"description\": \"Whether to allow squash merges for pull requests.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"allow_auto_merge\": {\r",
									"              \"description\": \"Whether to allow Auto-merge to be used on pull requests.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                false\r",
									"              ]\r",
									"            },\r",
									"            \"delete_branch_on_merge\": {\r",
									"              \"description\": \"Whether to delete head branches when pull requests are merged\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                false\r",
									"              ]\r",
									"            },\r",
									"            \"allow_update_branch\": {\r",
									"              \"description\": \"Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                false\r",
									"              ]\r",
									"            },\r",
									"            \"use_squash_pr_title_as_default\": {\r",
									"              \"type\": \"boolean\",\r",
									"              \"description\": \"Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.\",\r",
									"              \"default\": false,\r",
									"              \"deprecated\": true\r",
									"            },\r",
									"            \"squash_merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"COMMIT_OR_PR_TITLE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"            },\r",
									"            \"squash_merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"COMMIT_MESSAGES\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"MERGE_MESSAGE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"            },\r",
									"            \"merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"PR_TITLE\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"allow_merge_commit\": {\r",
									"              \"description\": \"Whether to allow merge commits for pull requests.\",\r",
									"              \"default\": true,\r",
									"              \"type\": \"boolean\",\r",
									"              \"examples\": [\r",
									"                true\r",
									"              ]\r",
									"            },\r",
									"            \"allow_forking\": {\r",
									"              \"description\": \"Whether to allow forking this repo\",\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"web_commit_signoff_required\": {\r",
									"              \"description\": \"Whether to require contributors to sign off on web-based commits\",\r",
									"              \"default\": false,\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"subscribers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"network_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"open_issues\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"watchers\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"master_branch\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"starred_at\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"\\\"2020-07-09T00:17:42Z\\\"\"\r",
									"              ]\r",
									"            },\r",
									"            \"anonymous_access_enabled\": {\r",
									"              \"type\": \"boolean\",\r",
									"              \"description\": \"Whether anonymous git access is enabled for this repository\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"archive_url\",\r",
									"            \"assignees_url\",\r",
									"            \"blobs_url\",\r",
									"            \"branches_url\",\r",
									"            \"collaborators_url\",\r",
									"            \"comments_url\",\r",
									"            \"commits_url\",\r",
									"            \"compare_url\",\r",
									"            \"contents_url\",\r",
									"            \"contributors_url\",\r",
									"            \"deployments_url\",\r",
									"            \"description\",\r",
									"            \"downloads_url\",\r",
									"            \"events_url\",\r",
									"            \"fork\",\r",
									"            \"forks_url\",\r",
									"            \"full_name\",\r",
									"            \"git_commits_url\",\r",
									"            \"git_refs_url\",\r",
									"            \"git_tags_url\",\r",
									"            \"hooks_url\",\r",
									"            \"html_url\",\r",
									"            \"id\",\r",
									"            \"node_id\",\r",
									"            \"issue_comment_url\",\r",
									"            \"issue_events_url\",\r",
									"            \"issues_url\",\r",
									"            \"keys_url\",\r",
									"            \"labels_url\",\r",
									"            \"languages_url\",\r",
									"            \"merges_url\",\r",
									"            \"milestones_url\",\r",
									"            \"name\",\r",
									"            \"notifications_url\",\r",
									"            \"owner\",\r",
									"            \"private\",\r",
									"            \"pulls_url\",\r",
									"            \"releases_url\",\r",
									"            \"stargazers_url\",\r",
									"            \"statuses_url\",\r",
									"            \"subscribers_url\",\r",
									"            \"subscription_url\",\r",
									"            \"tags_url\",\r",
									"            \"teams_url\",\r",
									"            \"trees_url\",\r",
									"            \"url\",\r",
									"            \"clone_url\",\r",
									"            \"default_branch\",\r",
									"            \"forks\",\r",
									"            \"forks_count\",\r",
									"            \"git_url\",\r",
									"            \"has_downloads\",\r",
									"            \"has_issues\",\r",
									"            \"has_projects\",\r",
									"            \"has_wiki\",\r",
									"            \"has_pages\",\r",
									"            \"homepage\",\r",
									"            \"language\",\r",
									"            \"archived\",\r",
									"            \"disabled\",\r",
									"            \"mirror_url\",\r",
									"            \"open_issues\",\r",
									"            \"open_issues_count\",\r",
									"            \"license\",\r",
									"            \"pushed_at\",\r",
									"            \"size\",\r",
									"            \"ssh_url\",\r",
									"            \"stargazers_count\",\r",
									"            \"svn_url\",\r",
									"            \"watchers\",\r",
									"            \"watchers_count\",\r",
									"            \"created_at\",\r",
									"            \"updated_at\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"temp_clone_token\": {\r",
									"      \"type\": [\r",
									"        \"string\",\r",
									"        \"null\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_squash_merge\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"allow_auto_merge\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"delete_branch_on_merge\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"allow_merge_commit\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"allow_update_branch\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"use_squash_pr_title_as_default\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"squash_merge_commit_title\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_TITLE\",\r",
									"        \"COMMIT_OR_PR_TITLE\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\",\r",
									"      \"examples\": [\r",
									"        \"PR_TITLE\"\r",
									"      ]\r",
									"    },\r",
									"    \"squash_merge_commit_message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_BODY\",\r",
									"        \"COMMIT_MESSAGES\",\r",
									"        \"BLANK\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\",\r",
									"      \"examples\": [\r",
									"        \"PR_BODY\"\r",
									"      ]\r",
									"    },\r",
									"    \"merge_commit_title\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_TITLE\",\r",
									"        \"MERGE_MESSAGE\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a merge commit title.\\n\\n  - `PR_TITLE` - default to the pull request's title.\\n  - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\",\r",
									"      \"examples\": [\r",
									"        \"PR_TITLE\"\r",
									"      ]\r",
									"    },\r",
									"    \"merge_commit_message\": {\r",
									"      \"type\": \"string\",\r",
									"      \"enum\": [\r",
									"        \"PR_BODY\",\r",
									"        \"PR_TITLE\",\r",
									"        \"BLANK\"\r",
									"      ],\r",
									"      \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\",\r",
									"      \"examples\": [\r",
									"        \"PR_BODY\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_forking\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        true\r",
									"      ]\r",
									"    },\r",
									"    \"web_commit_signoff_required\": {\r",
									"      \"type\": \"boolean\",\r",
									"      \"examples\": [\r",
									"        false\r",
									"      ]\r",
									"    },\r",
									"    \"subscribers_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        42\r",
									"      ]\r",
									"    },\r",
									"    \"network_count\": {\r",
									"      \"type\": \"integer\",\r",
									"      \"examples\": [\r",
									"        0\r",
									"      ]\r",
									"    },\r",
									"    \"license\": {\r",
									"      \"anyOf\": [\r",
									"        {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        {\r",
									"          \"title\": \"License Simple\",\r",
									"          \"description\": \"License Simple\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"key\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"mit\"\r",
									"              ]\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MIT License\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/licenses/mit\"\r",
									"              ]\r",
									"            },\r",
									"            \"spdx_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"MIT\"\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDc6TGljZW5zZW1pdA==\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"key\",\r",
									"            \"name\",\r",
									"            \"url\",\r",
									"            \"spdx_id\",\r",
									"            \"node_id\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"organization\": {\r",
									"      \"anyOf\": [\r",
									"        {\r",
									"          \"type\": \"null\"\r",
									"        },\r",
									"        {\r",
									"          \"title\": \"Simple User\",\r",
									"          \"description\": \"A GitHub user.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"name\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"email\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"login\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                1\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDQ6VXNlcjE=\"\r",
									"              ]\r",
									"            },\r",
									"            \"avatar_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/images/error/octocat_happy.gif\"\r",
									"              ]\r",
									"            },\r",
									"            \"gravatar_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"41d064eb2195891e12d0413f63227ea7\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"followers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/followers\"\r",
									"              ]\r",
									"            },\r",
									"            \"following_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"              ]\r",
									"            },\r",
									"            \"gists_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"starred_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscriptions_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/subscriptions\"\r",
									"              ]\r",
									"            },\r",
									"            \"organizations_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/orgs\"\r",
									"              ]\r",
									"            },\r",
									"            \"repos_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/repos\"\r",
									"              ]\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"              ]\r",
									"            },\r",
									"            \"received_events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/received_events\"\r",
									"              ]\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"User\"\r",
									"              ]\r",
									"            },\r",
									"            \"site_admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"starred_at\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"avatar_url\",\r",
									"            \"events_url\",\r",
									"            \"followers_url\",\r",
									"            \"following_url\",\r",
									"            \"gists_url\",\r",
									"            \"gravatar_id\",\r",
									"            \"html_url\",\r",
									"            \"id\",\r",
									"            \"node_id\",\r",
									"            \"login\",\r",
									"            \"organizations_url\",\r",
									"            \"received_events_url\",\r",
									"            \"repos_url\",\r",
									"            \"site_admin\",\r",
									"            \"starred_url\",\r",
									"            \"subscriptions_url\",\r",
									"            \"type\",\r",
									"            \"url\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"parent\": {\r",
									"      \"title\": \"Repository\",\r",
									"      \"description\": \"A repository on GitHub.\",\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"description\": \"Unique identifier of the repository\",\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            42\r",
									"          ]\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"          ]\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"description\": \"The name of the repository.\",\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"Team Environment\"\r",
									"          ]\r",
									"        },\r",
									"        \"full_name\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"license\": {\r",
									"          \"anyOf\": [\r",
									"            {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            {\r",
									"              \"title\": \"License Simple\",\r",
									"              \"description\": \"License Simple\",\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"key\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"mit\"\r",
									"                  ]\r",
									"                },\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MIT License\"\r",
									"                  ]\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/licenses/mit\"\r",
									"                  ]\r",
									"                },\r",
									"                \"spdx_id\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"examples\": [\r",
									"                    \"MIT\"\r",
									"                  ]\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MDc6TGljZW5zZW1pdA==\"\r",
									"                  ]\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"key\",\r",
									"                \"name\",\r",
									"                \"url\",\r",
									"                \"spdx_id\",\r",
									"                \"node_id\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"organization\": {\r",
									"          \"anyOf\": [\r",
									"            {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            {\r",
									"              \"title\": \"Simple User\",\r",
									"              \"description\": \"A GitHub user.\",\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"email\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"login\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\",\r",
									"                  \"examples\": [\r",
									"                    1\r",
									"                  ]\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MDQ6VXNlcjE=\"\r",
									"                  ]\r",
									"                },\r",
									"                \"avatar_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/images/error/octocat_happy.gif\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gravatar_id\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"examples\": [\r",
									"                    \"41d064eb2195891e12d0413f63227ea7\"\r",
									"                  ]\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"followers_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/followers\"\r",
									"                  ]\r",
									"                },\r",
									"                \"following_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gists_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"starred_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"subscriptions_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/subscriptions\"\r",
									"                  ]\r",
									"                },\r",
									"                \"organizations_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/orgs\"\r",
									"                  ]\r",
									"                },\r",
									"                \"repos_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/repos\"\r",
									"                  ]\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"received_events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/received_events\"\r",
									"                  ]\r",
									"                },\r",
									"                \"type\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"User\"\r",
									"                  ]\r",
									"                },\r",
									"                \"site_admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"starred_at\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"avatar_url\",\r",
									"                \"events_url\",\r",
									"                \"followers_url\",\r",
									"                \"following_url\",\r",
									"                \"gists_url\",\r",
									"                \"gravatar_id\",\r",
									"                \"html_url\",\r",
									"                \"id\",\r",
									"                \"node_id\",\r",
									"                \"login\",\r",
									"                \"organizations_url\",\r",
									"                \"received_events_url\",\r",
									"                \"repos_url\",\r",
									"                \"site_admin\",\r",
									"                \"starred_url\",\r",
									"                \"subscriptions_url\",\r",
									"                \"type\",\r",
									"                \"url\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"forks\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"permissions\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"pull\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"triage\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"push\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"maintain\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"admin\",\r",
									"            \"pull\",\r",
									"            \"push\"\r",
									"          ]\r",
									"        },\r",
									"        \"owner\": {\r",
									"          \"title\": \"Simple User\",\r",
									"          \"description\": \"A GitHub user.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"name\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"email\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"login\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                1\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDQ6VXNlcjE=\"\r",
									"              ]\r",
									"            },\r",
									"            \"avatar_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/images/error/octocat_happy.gif\"\r",
									"              ]\r",
									"            },\r",
									"            \"gravatar_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"41d064eb2195891e12d0413f63227ea7\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"followers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/followers\"\r",
									"              ]\r",
									"            },\r",
									"            \"following_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"              ]\r",
									"            },\r",
									"            \"gists_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"starred_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscriptions_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/subscriptions\"\r",
									"              ]\r",
									"            },\r",
									"            \"organizations_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/orgs\"\r",
									"              ]\r",
									"            },\r",
									"            \"repos_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/repos\"\r",
									"              ]\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"              ]\r",
									"            },\r",
									"            \"received_events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/received_events\"\r",
									"              ]\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"User\"\r",
									"              ]\r",
									"            },\r",
									"            \"site_admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"starred_at\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"avatar_url\",\r",
									"            \"events_url\",\r",
									"            \"followers_url\",\r",
									"            \"following_url\",\r",
									"            \"gists_url\",\r",
									"            \"gravatar_id\",\r",
									"            \"html_url\",\r",
									"            \"id\",\r",
									"            \"node_id\",\r",
									"            \"login\",\r",
									"            \"organizations_url\",\r",
									"            \"received_events_url\",\r",
									"            \"repos_url\",\r",
									"            \"site_admin\",\r",
									"            \"starred_url\",\r",
									"            \"subscriptions_url\",\r",
									"            \"type\",\r",
									"            \"url\"\r",
									"          ]\r",
									"        },\r",
									"        \"private\": {\r",
									"          \"description\": \"Whether the repository is private or public.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"description\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"examples\": [\r",
									"            \"This your first repo!\"\r",
									"          ]\r",
									"        },\r",
									"        \"fork\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"archive_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"          ]\r",
									"        },\r",
									"        \"assignees_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"          ]\r",
									"        },\r",
									"        \"blobs_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"branches_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"          ]\r",
									"        },\r",
									"        \"collaborators_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"          ]\r",
									"        },\r",
									"        \"comments_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"commits_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"compare_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"          ]\r",
									"        },\r",
									"        \"contents_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"          ]\r",
									"        },\r",
									"        \"contributors_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"          ]\r",
									"        },\r",
									"        \"deployments_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"          ]\r",
									"        },\r",
									"        \"downloads_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"          ]\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"          ]\r",
									"        },\r",
									"        \"forks_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_commits_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_refs_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_tags_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"git:github.com/octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"issue_comment_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"issue_events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"issues_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"keys_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"labels_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"          ]\r",
									"        },\r",
									"        \"languages_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"          ]\r",
									"        },\r",
									"        \"merges_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"          ]\r",
									"        },\r",
									"        \"milestones_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"notifications_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"          ]\r",
									"        },\r",
									"        \"pulls_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"releases_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"ssh_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"git@github.com:octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"stargazers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"          ]\r",
									"        },\r",
									"        \"statuses_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscribers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscription_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"          ]\r",
									"        },\r",
									"        \"tags_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"          ]\r",
									"        },\r",
									"        \"teams_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"          ]\r",
									"        },\r",
									"        \"trees_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"clone_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"mirror_url\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"git:git.example.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"hooks_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"          ]\r",
									"        },\r",
									"        \"svn_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://svn.github.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"homepage\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com\"\r",
									"          ]\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"forks_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            9\r",
									"          ]\r",
									"        },\r",
									"        \"stargazers_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            80\r",
									"          ]\r",
									"        },\r",
									"        \"watchers_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            80\r",
									"          ]\r",
									"        },\r",
									"        \"size\": {\r",
									"          \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            108\r",
									"          ]\r",
									"        },\r",
									"        \"default_branch\": {\r",
									"          \"description\": \"The default branch of the repository.\",\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"master\"\r",
									"          ]\r",
									"        },\r",
									"        \"open_issues_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            0\r",
									"          ]\r",
									"        },\r",
									"        \"is_template\": {\r",
									"          \"description\": \"Whether this repository acts as a template that can be used to generate new repositories.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"topics\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        },\r",
									"        \"has_issues\": {\r",
									"          \"description\": \"Whether issues are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_projects\": {\r",
									"          \"description\": \"Whether projects are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_wiki\": {\r",
									"          \"description\": \"Whether the wiki is enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_pages\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_downloads\": {\r",
									"          \"description\": \"Whether downloads are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"deprecated\": true,\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_discussions\": {\r",
									"          \"description\": \"Whether discussions are enabled.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"archived\": {\r",
									"          \"description\": \"Whether the repository is archived.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"disabled\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Returns whether or not this repository disabled.\"\r",
									"        },\r",
									"        \"visibility\": {\r",
									"          \"description\": \"The repository visibility: public, private, or internal.\",\r",
									"          \"default\": \"public\",\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pushed_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:06:43Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:01:12Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:14:43Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"allow_rebase_merge\": {\r",
									"          \"description\": \"Whether to allow rebase merges for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"template_repository\": {\r",
									"          \"type\": [\r",
									"            \"object\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"full_name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"owner\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"login\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"avatar_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"gravatar_id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"followers_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"following_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"gists_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"starred_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"subscriptions_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"organizations_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"repos_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"received_events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"type\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"site_admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              }\r",
									"            },\r",
									"            \"private\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"fork\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"archive_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"assignees_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"blobs_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"branches_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"collaborators_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"comments_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"commits_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"compare_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"contents_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"contributors_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"deployments_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"downloads_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"forks_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_commits_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_refs_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_tags_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issue_comment_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issue_events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issues_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"keys_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"labels_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"languages_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"merges_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"milestones_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"notifications_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"pulls_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"releases_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"ssh_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"stargazers_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"statuses_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subscribers_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subscription_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"tags_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"teams_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"trees_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"clone_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mirror_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"hooks_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"svn_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"homepage\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"language\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"forks_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"stargazers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"watchers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"size\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"default_branch\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"open_issues_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"is_template\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"topics\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {\r",
									"                \"type\": \"string\"\r",
									"              }\r",
									"            },\r",
									"            \"has_issues\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_projects\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_wiki\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_pages\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_downloads\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"archived\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"disabled\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"visibility\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"pushed_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"created_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updated_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"permissions\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"maintain\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"push\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"triage\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"pull\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              }\r",
									"            },\r",
									"            \"allow_rebase_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"temp_clone_token\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"allow_squash_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"allow_auto_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"delete_branch_on_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"allow_update_branch\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"use_squash_pr_title_as_default\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"squash_merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"COMMIT_OR_PR_TITLE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"            },\r",
									"            \"squash_merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"COMMIT_MESSAGES\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"MERGE_MESSAGE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"            },\r",
									"            \"merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"PR_TITLE\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"allow_merge_commit\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"subscribers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"network_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"temp_clone_token\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"allow_squash_merge\": {\r",
									"          \"description\": \"Whether to allow squash merges for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"allow_auto_merge\": {\r",
									"          \"description\": \"Whether to allow Auto-merge to be used on pull requests.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"delete_branch_on_merge\": {\r",
									"          \"description\": \"Whether to delete head branches when pull requests are merged\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"allow_update_branch\": {\r",
									"          \"description\": \"Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"use_squash_pr_title_as_default\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.\",\r",
									"          \"default\": false,\r",
									"          \"deprecated\": true\r",
									"        },\r",
									"        \"squash_merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"COMMIT_OR_PR_TITLE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"        },\r",
									"        \"squash_merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"COMMIT_MESSAGES\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"MERGE_MESSAGE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"        },\r",
									"        \"merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"PR_TITLE\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"allow_merge_commit\": {\r",
									"          \"description\": \"Whether to allow merge commits for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"allow_forking\": {\r",
									"          \"description\": \"Whether to allow forking this repo\",\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"web_commit_signoff_required\": {\r",
									"          \"description\": \"Whether to require contributors to sign off on web-based commits\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"subscribers_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"network_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"open_issues\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"watchers\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"master_branch\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"starred_at\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"\\\"2020-07-09T00:17:42Z\\\"\"\r",
									"          ]\r",
									"        },\r",
									"        \"anonymous_access_enabled\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Whether anonymous git access is enabled for this repository\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"archive_url\",\r",
									"        \"assignees_url\",\r",
									"        \"blobs_url\",\r",
									"        \"branches_url\",\r",
									"        \"collaborators_url\",\r",
									"        \"comments_url\",\r",
									"        \"commits_url\",\r",
									"        \"compare_url\",\r",
									"        \"contents_url\",\r",
									"        \"contributors_url\",\r",
									"        \"deployments_url\",\r",
									"        \"description\",\r",
									"        \"downloads_url\",\r",
									"        \"events_url\",\r",
									"        \"fork\",\r",
									"        \"forks_url\",\r",
									"        \"full_name\",\r",
									"        \"git_commits_url\",\r",
									"        \"git_refs_url\",\r",
									"        \"git_tags_url\",\r",
									"        \"hooks_url\",\r",
									"        \"html_url\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"issue_comment_url\",\r",
									"        \"issue_events_url\",\r",
									"        \"issues_url\",\r",
									"        \"keys_url\",\r",
									"        \"labels_url\",\r",
									"        \"languages_url\",\r",
									"        \"merges_url\",\r",
									"        \"milestones_url\",\r",
									"        \"name\",\r",
									"        \"notifications_url\",\r",
									"        \"owner\",\r",
									"        \"private\",\r",
									"        \"pulls_url\",\r",
									"        \"releases_url\",\r",
									"        \"stargazers_url\",\r",
									"        \"statuses_url\",\r",
									"        \"subscribers_url\",\r",
									"        \"subscription_url\",\r",
									"        \"tags_url\",\r",
									"        \"teams_url\",\r",
									"        \"trees_url\",\r",
									"        \"url\",\r",
									"        \"clone_url\",\r",
									"        \"default_branch\",\r",
									"        \"forks\",\r",
									"        \"forks_count\",\r",
									"        \"git_url\",\r",
									"        \"has_downloads\",\r",
									"        \"has_issues\",\r",
									"        \"has_projects\",\r",
									"        \"has_wiki\",\r",
									"        \"has_pages\",\r",
									"        \"homepage\",\r",
									"        \"language\",\r",
									"        \"archived\",\r",
									"        \"disabled\",\r",
									"        \"mirror_url\",\r",
									"        \"open_issues\",\r",
									"        \"open_issues_count\",\r",
									"        \"license\",\r",
									"        \"pushed_at\",\r",
									"        \"size\",\r",
									"        \"ssh_url\",\r",
									"        \"stargazers_count\",\r",
									"        \"svn_url\",\r",
									"        \"watchers\",\r",
									"        \"watchers_count\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\"\r",
									"      ]\r",
									"    },\r",
									"    \"source\": {\r",
									"      \"title\": \"Repository\",\r",
									"      \"description\": \"A repository on GitHub.\",\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"id\": {\r",
									"          \"description\": \"Unique identifier of the repository\",\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            42\r",
									"          ]\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\"\r",
									"          ]\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"description\": \"The name of the repository.\",\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"Team Environment\"\r",
									"          ]\r",
									"        },\r",
									"        \"full_name\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"license\": {\r",
									"          \"anyOf\": [\r",
									"            {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            {\r",
									"              \"title\": \"License Simple\",\r",
									"              \"description\": \"License Simple\",\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"key\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"mit\"\r",
									"                  ]\r",
									"                },\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MIT License\"\r",
									"                  ]\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/licenses/mit\"\r",
									"                  ]\r",
									"                },\r",
									"                \"spdx_id\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"examples\": [\r",
									"                    \"MIT\"\r",
									"                  ]\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MDc6TGljZW5zZW1pdA==\"\r",
									"                  ]\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"key\",\r",
									"                \"name\",\r",
									"                \"url\",\r",
									"                \"spdx_id\",\r",
									"                \"node_id\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"organization\": {\r",
									"          \"anyOf\": [\r",
									"            {\r",
									"              \"type\": \"null\"\r",
									"            },\r",
									"            {\r",
									"              \"title\": \"Simple User\",\r",
									"              \"description\": \"A GitHub user.\",\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"email\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ]\r",
									"                },\r",
									"                \"login\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\",\r",
									"                  \"examples\": [\r",
									"                    1\r",
									"                  ]\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"MDQ6VXNlcjE=\"\r",
									"                  ]\r",
									"                },\r",
									"                \"avatar_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/images/error/octocat_happy.gif\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gravatar_id\": {\r",
									"                  \"type\": [\r",
									"                    \"string\",\r",
									"                    \"null\"\r",
									"                  ],\r",
									"                  \"examples\": [\r",
									"                    \"41d064eb2195891e12d0413f63227ea7\"\r",
									"                  ]\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://github.com/octocat\"\r",
									"                  ]\r",
									"                },\r",
									"                \"followers_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/followers\"\r",
									"                  ]\r",
									"                },\r",
									"                \"following_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"gists_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"starred_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"subscriptions_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/subscriptions\"\r",
									"                  ]\r",
									"                },\r",
									"                \"organizations_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/orgs\"\r",
									"                  ]\r",
									"                },\r",
									"                \"repos_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/repos\"\r",
									"                  ]\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"                  ]\r",
									"                },\r",
									"                \"received_events_url\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"format\": \"uri\",\r",
									"                  \"examples\": [\r",
									"                    \"https://api.github.com/users/octocat/received_events\"\r",
									"                  ]\r",
									"                },\r",
									"                \"type\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"User\"\r",
									"                  ]\r",
									"                },\r",
									"                \"site_admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"starred_at\": {\r",
									"                  \"type\": \"string\",\r",
									"                  \"examples\": [\r",
									"                    \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"                  ]\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"avatar_url\",\r",
									"                \"events_url\",\r",
									"                \"followers_url\",\r",
									"                \"following_url\",\r",
									"                \"gists_url\",\r",
									"                \"gravatar_id\",\r",
									"                \"html_url\",\r",
									"                \"id\",\r",
									"                \"node_id\",\r",
									"                \"login\",\r",
									"                \"organizations_url\",\r",
									"                \"received_events_url\",\r",
									"                \"repos_url\",\r",
									"                \"site_admin\",\r",
									"                \"starred_url\",\r",
									"                \"subscriptions_url\",\r",
									"                \"type\",\r",
									"                \"url\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"forks\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"permissions\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"pull\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"triage\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"push\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"maintain\": {\r",
									"              \"type\": \"boolean\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"admin\",\r",
									"            \"pull\",\r",
									"            \"push\"\r",
									"          ]\r",
									"        },\r",
									"        \"owner\": {\r",
									"          \"title\": \"Simple User\",\r",
									"          \"description\": \"A GitHub user.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"name\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"email\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ]\r",
									"            },\r",
									"            \"login\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\",\r",
									"              \"examples\": [\r",
									"                1\r",
									"              ]\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"MDQ6VXNlcjE=\"\r",
									"              ]\r",
									"            },\r",
									"            \"avatar_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/images/error/octocat_happy.gif\"\r",
									"              ]\r",
									"            },\r",
									"            \"gravatar_id\": {\r",
									"              \"type\": [\r",
									"                \"string\",\r",
									"                \"null\"\r",
									"              ],\r",
									"              \"examples\": [\r",
									"                \"41d064eb2195891e12d0413f63227ea7\"\r",
									"              ]\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://github.com/octocat\"\r",
									"              ]\r",
									"            },\r",
									"            \"followers_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/followers\"\r",
									"              ]\r",
									"            },\r",
									"            \"following_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/following{/other_user}\"\r",
									"              ]\r",
									"            },\r",
									"            \"gists_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/gists{/gist_id}\"\r",
									"              ]\r",
									"            },\r",
									"            \"starred_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/starred{/owner}{/repo}\"\r",
									"              ]\r",
									"            },\r",
									"            \"subscriptions_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/subscriptions\"\r",
									"              ]\r",
									"            },\r",
									"            \"organizations_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/orgs\"\r",
									"              ]\r",
									"            },\r",
									"            \"repos_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/repos\"\r",
									"              ]\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/events{/privacy}\"\r",
									"              ]\r",
									"            },\r",
									"            \"received_events_url\": {\r",
									"              \"type\": \"string\",\r",
									"              \"format\": \"uri\",\r",
									"              \"examples\": [\r",
									"                \"https://api.github.com/users/octocat/received_events\"\r",
									"              ]\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"User\"\r",
									"              ]\r",
									"            },\r",
									"            \"site_admin\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"starred_at\": {\r",
									"              \"type\": \"string\",\r",
									"              \"examples\": [\r",
									"                \"\\\"2020-07-09T00:17:55Z\\\"\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"avatar_url\",\r",
									"            \"events_url\",\r",
									"            \"followers_url\",\r",
									"            \"following_url\",\r",
									"            \"gists_url\",\r",
									"            \"gravatar_id\",\r",
									"            \"html_url\",\r",
									"            \"id\",\r",
									"            \"node_id\",\r",
									"            \"login\",\r",
									"            \"organizations_url\",\r",
									"            \"received_events_url\",\r",
									"            \"repos_url\",\r",
									"            \"site_admin\",\r",
									"            \"starred_url\",\r",
									"            \"subscriptions_url\",\r",
									"            \"type\",\r",
									"            \"url\"\r",
									"          ]\r",
									"        },\r",
									"        \"private\": {\r",
									"          \"description\": \"Whether the repository is private or public.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"description\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"examples\": [\r",
									"            \"This your first repo!\"\r",
									"          ]\r",
									"        },\r",
									"        \"fork\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/repos/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"archive_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\"\r",
									"          ]\r",
									"        },\r",
									"        \"assignees_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\"\r",
									"          ]\r",
									"        },\r",
									"        \"blobs_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"branches_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\"\r",
									"          ]\r",
									"        },\r",
									"        \"collaborators_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\"\r",
									"          ]\r",
									"        },\r",
									"        \"comments_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"commits_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"compare_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\"\r",
									"          ]\r",
									"        },\r",
									"        \"contents_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\"\r",
									"          ]\r",
									"        },\r",
									"        \"contributors_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/contributors\"\r",
									"          ]\r",
									"        },\r",
									"        \"deployments_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/deployments\"\r",
									"          ]\r",
									"        },\r",
									"        \"downloads_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/downloads\"\r",
									"          ]\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/events\"\r",
									"          ]\r",
									"        },\r",
									"        \"forks_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/forks\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_commits_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_refs_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_tags_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"git_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"git:github.com/octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"issue_comment_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"issue_events_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"issues_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"keys_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"labels_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\"\r",
									"          ]\r",
									"        },\r",
									"        \"languages_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/languages\"\r",
									"          ]\r",
									"        },\r",
									"        \"merges_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/merges\"\r",
									"          ]\r",
									"        },\r",
									"        \"milestones_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"notifications_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\"\r",
									"          ]\r",
									"        },\r",
									"        \"pulls_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\"\r",
									"          ]\r",
									"        },\r",
									"        \"releases_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\r",
									"          ]\r",
									"        },\r",
									"        \"ssh_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"git@github.com:octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"stargazers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/stargazers\"\r",
									"          ]\r",
									"        },\r",
									"        \"statuses_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscribers_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/subscribers\"\r",
									"          ]\r",
									"        },\r",
									"        \"subscription_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/subscription\"\r",
									"          ]\r",
									"        },\r",
									"        \"tags_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/tags\"\r",
									"          ]\r",
									"        },\r",
									"        \"teams_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/teams\"\r",
									"          ]\r",
									"        },\r",
									"        \"trees_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\"\r",
									"          ]\r",
									"        },\r",
									"        \"clone_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/octocat/Hello-World.git\"\r",
									"          ]\r",
									"        },\r",
									"        \"mirror_url\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"git:git.example.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"hooks_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"http://api.github.com/repos/octocat/Hello-World/hooks\"\r",
									"          ]\r",
									"        },\r",
									"        \"svn_url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://svn.github.com/octocat/Hello-World\"\r",
									"          ]\r",
									"        },\r",
									"        \"homepage\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com\"\r",
									"          ]\r",
									"        },\r",
									"        \"language\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ]\r",
									"        },\r",
									"        \"forks_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            9\r",
									"          ]\r",
									"        },\r",
									"        \"stargazers_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            80\r",
									"          ]\r",
									"        },\r",
									"        \"watchers_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            80\r",
									"          ]\r",
									"        },\r",
									"        \"size\": {\r",
									"          \"description\": \"The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.\",\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            108\r",
									"          ]\r",
									"        },\r",
									"        \"default_branch\": {\r",
									"          \"description\": \"The default branch of the repository.\",\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"master\"\r",
									"          ]\r",
									"        },\r",
									"        \"open_issues_count\": {\r",
									"          \"type\": \"integer\",\r",
									"          \"examples\": [\r",
									"            0\r",
									"          ]\r",
									"        },\r",
									"        \"is_template\": {\r",
									"          \"description\": \"Whether this repository acts as a template that can be used to generate new repositories.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"topics\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": {\r",
									"            \"type\": \"string\"\r",
									"          }\r",
									"        },\r",
									"        \"has_issues\": {\r",
									"          \"description\": \"Whether issues are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_projects\": {\r",
									"          \"description\": \"Whether projects are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_wiki\": {\r",
									"          \"description\": \"Whether the wiki is enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_pages\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"has_downloads\": {\r",
									"          \"description\": \"Whether downloads are enabled.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"deprecated\": true,\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"has_discussions\": {\r",
									"          \"description\": \"Whether discussions are enabled.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"archived\": {\r",
									"          \"description\": \"Whether the repository is archived.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"disabled\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Returns whether or not this repository disabled.\"\r",
									"        },\r",
									"        \"visibility\": {\r",
									"          \"description\": \"The repository visibility: public, private, or internal.\",\r",
									"          \"default\": \"public\",\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"pushed_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:06:43Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"created_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:01:12Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"updated_at\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"date-time\",\r",
									"          \"examples\": [\r",
									"            \"2011-01-26T19:14:43Z\"\r",
									"          ]\r",
									"        },\r",
									"        \"allow_rebase_merge\": {\r",
									"          \"description\": \"Whether to allow rebase merges for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"template_repository\": {\r",
									"          \"type\": [\r",
									"            \"object\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"node_id\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"full_name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"owner\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"login\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"node_id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"avatar_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"gravatar_id\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"html_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"followers_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"following_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"gists_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"starred_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"subscriptions_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"organizations_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"repos_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"received_events_url\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"type\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"site_admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              }\r",
									"            },\r",
									"            \"private\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"html_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"fork\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"archive_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"assignees_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"blobs_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"branches_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"collaborators_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"comments_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"commits_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"compare_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"contents_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"contributors_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"deployments_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"downloads_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"forks_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_commits_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_refs_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_tags_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"git_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issue_comment_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issue_events_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"issues_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"keys_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"labels_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"languages_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"merges_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"milestones_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"notifications_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"pulls_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"releases_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"ssh_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"stargazers_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"statuses_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subscribers_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"subscription_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"tags_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"teams_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"trees_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"clone_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mirror_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"hooks_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"svn_url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"homepage\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"language\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"forks_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"stargazers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"watchers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"size\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"default_branch\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"open_issues_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"is_template\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"topics\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {\r",
									"                \"type\": \"string\"\r",
									"              }\r",
									"            },\r",
									"            \"has_issues\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_projects\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_wiki\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_pages\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"has_downloads\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"archived\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"disabled\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"visibility\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"pushed_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"created_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updated_at\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"permissions\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"admin\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"maintain\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"push\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"triage\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"pull\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              }\r",
									"            },\r",
									"            \"allow_rebase_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"temp_clone_token\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"allow_squash_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"allow_auto_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"delete_branch_on_merge\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"allow_update_branch\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"use_squash_pr_title_as_default\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"squash_merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"COMMIT_OR_PR_TITLE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"            },\r",
									"            \"squash_merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"COMMIT_MESSAGES\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"merge_commit_title\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_TITLE\",\r",
									"                \"MERGE_MESSAGE\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"            },\r",
									"            \"merge_commit_message\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"PR_BODY\",\r",
									"                \"PR_TITLE\",\r",
									"                \"BLANK\"\r",
									"              ],\r",
									"              \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"            },\r",
									"            \"allow_merge_commit\": {\r",
									"              \"type\": \"boolean\"\r",
									"            },\r",
									"            \"subscribers_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"network_count\": {\r",
									"              \"type\": \"integer\"\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"temp_clone_token\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"allow_squash_merge\": {\r",
									"          \"description\": \"Whether to allow squash merges for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"allow_auto_merge\": {\r",
									"          \"description\": \"Whether to allow Auto-merge to be used on pull requests.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"delete_branch_on_merge\": {\r",
									"          \"description\": \"Whether to delete head branches when pull requests are merged\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"allow_update_branch\": {\r",
									"          \"description\": \"Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            false\r",
									"          ]\r",
									"        },\r",
									"        \"use_squash_pr_title_as_default\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.\",\r",
									"          \"default\": false,\r",
									"          \"deprecated\": true\r",
									"        },\r",
									"        \"squash_merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"COMMIT_OR_PR_TITLE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit title:\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).\"\r",
									"        },\r",
									"        \"squash_merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"COMMIT_MESSAGES\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a squash merge commit message:\\n\\n- `PR_BODY` - default to the pull request's body.\\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"merge_commit_title\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_TITLE\",\r",
									"            \"MERGE_MESSAGE\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit title.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).\"\r",
									"        },\r",
									"        \"merge_commit_message\": {\r",
									"          \"type\": \"string\",\r",
									"          \"enum\": [\r",
									"            \"PR_BODY\",\r",
									"            \"PR_TITLE\",\r",
									"            \"BLANK\"\r",
									"          ],\r",
									"          \"description\": \"The default value for a merge commit message.\\n\\n- `PR_TITLE` - default to the pull request's title.\\n- `PR_BODY` - default to the pull request's body.\\n- `BLANK` - default to a blank commit message.\"\r",
									"        },\r",
									"        \"allow_merge_commit\": {\r",
									"          \"description\": \"Whether to allow merge commits for pull requests.\",\r",
									"          \"default\": true,\r",
									"          \"type\": \"boolean\",\r",
									"          \"examples\": [\r",
									"            true\r",
									"          ]\r",
									"        },\r",
									"        \"allow_forking\": {\r",
									"          \"description\": \"Whether to allow forking this repo\",\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"web_commit_signoff_required\": {\r",
									"          \"description\": \"Whether to require contributors to sign off on web-based commits\",\r",
									"          \"default\": false,\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"subscribers_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"network_count\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"open_issues\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"watchers\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"master_branch\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"starred_at\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"\\\"2020-07-09T00:17:42Z\\\"\"\r",
									"          ]\r",
									"        },\r",
									"        \"anonymous_access_enabled\": {\r",
									"          \"type\": \"boolean\",\r",
									"          \"description\": \"Whether anonymous git access is enabled for this repository\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"archive_url\",\r",
									"        \"assignees_url\",\r",
									"        \"blobs_url\",\r",
									"        \"branches_url\",\r",
									"        \"collaborators_url\",\r",
									"        \"comments_url\",\r",
									"        \"commits_url\",\r",
									"        \"compare_url\",\r",
									"        \"contents_url\",\r",
									"        \"contributors_url\",\r",
									"        \"deployments_url\",\r",
									"        \"description\",\r",
									"        \"downloads_url\",\r",
									"        \"events_url\",\r",
									"        \"fork\",\r",
									"        \"forks_url\",\r",
									"        \"full_name\",\r",
									"        \"git_commits_url\",\r",
									"        \"git_refs_url\",\r",
									"        \"git_tags_url\",\r",
									"        \"hooks_url\",\r",
									"        \"html_url\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"issue_comment_url\",\r",
									"        \"issue_events_url\",\r",
									"        \"issues_url\",\r",
									"        \"keys_url\",\r",
									"        \"labels_url\",\r",
									"        \"languages_url\",\r",
									"        \"merges_url\",\r",
									"        \"milestones_url\",\r",
									"        \"name\",\r",
									"        \"notifications_url\",\r",
									"        \"owner\",\r",
									"        \"private\",\r",
									"        \"pulls_url\",\r",
									"        \"releases_url\",\r",
									"        \"stargazers_url\",\r",
									"        \"statuses_url\",\r",
									"        \"subscribers_url\",\r",
									"        \"subscription_url\",\r",
									"        \"tags_url\",\r",
									"        \"teams_url\",\r",
									"        \"trees_url\",\r",
									"        \"url\",\r",
									"        \"clone_url\",\r",
									"        \"default_branch\",\r",
									"        \"forks\",\r",
									"        \"forks_count\",\r",
									"        \"git_url\",\r",
									"        \"has_downloads\",\r",
									"        \"has_issues\",\r",
									"        \"has_projects\",\r",
									"        \"has_wiki\",\r",
									"        \"has_pages\",\r",
									"        \"homepage\",\r",
									"        \"language\",\r",
									"        \"archived\",\r",
									"        \"disabled\",\r",
									"        \"mirror_url\",\r",
									"        \"open_issues\",\r",
									"        \"open_issues_count\",\r",
									"        \"license\",\r",
									"        \"pushed_at\",\r",
									"        \"size\",\r",
									"        \"ssh_url\",\r",
									"        \"stargazers_count\",\r",
									"        \"svn_url\",\r",
									"        \"watchers\",\r",
									"        \"watchers_count\",\r",
									"        \"created_at\",\r",
									"        \"updated_at\"\r",
									"      ]\r",
									"    },\r",
									"    \"forks\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"master_branch\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"open_issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"anonymous_access_enabled\": {\r",
									"      \"description\": \"Whether anonymous git access is allowed.\",\r",
									"      \"default\": true,\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"code_of_conduct\": {\r",
									"      \"title\": \"Code Of Conduct Simple\",\r",
									"      \"description\": \"Code of Conduct Simple\",\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"url\": {\r",
									"          \"type\": \"string\",\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://api.github.com/repos/github/docs/community/code_of_conduct\"\r",
									"          ]\r",
									"        },\r",
									"        \"key\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"citizen_code_of_conduct\"\r",
									"          ]\r",
									"        },\r",
									"        \"name\": {\r",
									"          \"type\": \"string\",\r",
									"          \"examples\": [\r",
									"            \"Citizen Code of Conduct\"\r",
									"          ]\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": [\r",
									"            \"string\",\r",
									"            \"null\"\r",
									"          ],\r",
									"          \"format\": \"uri\",\r",
									"          \"examples\": [\r",
									"            \"https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md\"\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"url\",\r",
									"        \"key\",\r",
									"        \"name\",\r",
									"        \"html_url\"\r",
									"      ]\r",
									"    },\r",
									"    \"security_and_analysis\": {\r",
									"      \"type\": [\r",
									"        \"object\",\r",
									"        \"null\"\r",
									"      ],\r",
									"      \"properties\": {\r",
									"        \"advanced_security\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"status\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"enabled\",\r",
									"                \"disabled\"\r",
									"              ]\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"dependabot_security_updates\": {\r",
									"          \"description\": \"Enable or disable Dependabot security updates for the repository.\",\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"status\": {\r",
									"              \"description\": \"The enablement status of Dependabot security updates for the repository.\",\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"enabled\",\r",
									"                \"disabled\"\r",
									"              ]\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"secret_scanning\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"status\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"enabled\",\r",
									"                \"disabled\"\r",
									"              ]\r",
									"            }\r",
									"          }\r",
									"        },\r",
									"        \"secret_scanning_push_protection\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"status\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [\r",
									"                \"enabled\",\r",
									"                \"disabled\"\r",
									"              ]\r",
									"            }\r",
									"          }\r",
									"        }\r",
									"      }\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"archive_url\",\r",
									"    \"assignees_url\",\r",
									"    \"blobs_url\",\r",
									"    \"branches_url\",\r",
									"    \"collaborators_url\",\r",
									"    \"comments_url\",\r",
									"    \"commits_url\",\r",
									"    \"compare_url\",\r",
									"    \"contents_url\",\r",
									"    \"contributors_url\",\r",
									"    \"deployments_url\",\r",
									"    \"description\",\r",
									"    \"downloads_url\",\r",
									"    \"events_url\",\r",
									"    \"fork\",\r",
									"    \"forks_url\",\r",
									"    \"full_name\",\r",
									"    \"git_commits_url\",\r",
									"    \"git_refs_url\",\r",
									"    \"git_tags_url\",\r",
									"    \"hooks_url\",\r",
									"    \"html_url\",\r",
									"    \"id\",\r",
									"    \"node_id\",\r",
									"    \"issue_comment_url\",\r",
									"    \"issue_events_url\",\r",
									"    \"issues_url\",\r",
									"    \"keys_url\",\r",
									"    \"labels_url\",\r",
									"    \"languages_url\",\r",
									"    \"merges_url\",\r",
									"    \"milestones_url\",\r",
									"    \"name\",\r",
									"    \"notifications_url\",\r",
									"    \"owner\",\r",
									"    \"private\",\r",
									"    \"pulls_url\",\r",
									"    \"releases_url\",\r",
									"    \"stargazers_url\",\r",
									"    \"statuses_url\",\r",
									"    \"subscribers_url\",\r",
									"    \"subscription_url\",\r",
									"    \"tags_url\",\r",
									"    \"teams_url\",\r",
									"    \"trees_url\",\r",
									"    \"url\",\r",
									"    \"clone_url\",\r",
									"    \"default_branch\",\r",
									"    \"forks\",\r",
									"    \"forks_count\",\r",
									"    \"git_url\",\r",
									"    \"has_issues\",\r",
									"    \"has_projects\",\r",
									"    \"has_wiki\",\r",
									"    \"has_pages\",\r",
									"    \"has_discussions\",\r",
									"    \"homepage\",\r",
									"    \"language\",\r",
									"    \"archived\",\r",
									"    \"disabled\",\r",
									"    \"mirror_url\",\r",
									"    \"open_issues\",\r",
									"    \"open_issues_count\",\r",
									"    \"license\",\r",
									"    \"pushed_at\",\r",
									"    \"size\",\r",
									"    \"ssh_url\",\r",
									"    \"stargazers_count\",\r",
									"    \"svn_url\",\r",
									"    \"watchers\",\r",
									"    \"watchers_count\",\r",
									"    \"created_at\",\r",
									"    \"updated_at\",\r",
									"    \"network_count\",\r",
									"    \"subscribers_count\"\r",
									"  ]\r",
									"}\r",
									"//valid jason\r",
									" // it checks the given schema to the respone json converted to schema that matched the user given schema\r",
									"pm.test(\"validate jasonschema\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"// to check it has the body or not\r",
									"pm.test(\"response  body\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"\r",
									"\r",
									"//first id should not be null \r",
									"pm.test(\"id  not null\", function () {\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									"// console.log(jasonData['id']);\r",
									" pm.expect(jasonData['id']).not.to.be.null;\r",
									"\r",
									"});\r",
									"\r",
									"//name of the repo must be hello-world\r",
									"pm.test(\"Name key in Repo\",function(){\r",
									"\r",
									" var jasonData=pm.response.json();//convert .json to .javascript\r",
									"     pm.expect(jasonData['name']).to.eql('Hello-World');\r",
									"     pm.collectionVariables.set(\"modify_repo_name_after_update\",jasonData['name']);\r",
									"\r",
									"});\r",
									"\r",
									"// repo must be private \r",
									"pm.test(\"Check if the repository is private\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData['private']).to.be.true;\r",
									"});\r",
									"\r",
									"// to check the particular key in the respone ie the key(not value)\r",
									"pm.test(\"Check if a key exists in the response JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('full_name'); // Replace 'yourKey' with the key you want to check\r",
									"    pm.expect(jsonData).to.have.property('url'); // Replace 'yourKey' with the key you want to check\r",
									"    pm.expect(jsonData).to.have.property('description'); // Replace 'yourKey' with the key you want to check\r",
									"});\r",
									"\r",
									"\r",
									"// to check the content-type key in the heasder must have\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"//to check respone has no error \r",
									"pm.test(\"Response has no error\", function () {\r",
									" pm.response.to.not.be.error;\r",
									"});\r",
									"\r",
									"\r",
									"//performance testing \r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check Owner\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.owner.login).to.equal(\"SumitKaushik1\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Hello-World\",\r\n    \"description\": \"This is your first repository\",\r\n    \"homepage\": \"https://github.com\",\r\n    \"private\": true,\r\n    \"has_issues\": true,\r\n    \"has_projects\": true,\r\n    \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1 Update_Repository_negative_basic_auth_it_must_fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"//generally bearer token is  not given in authorization generally it must give 401, no authenticaiton but it is giving 404 not found on not authentication b/z in api documentation 404 is given not 401 \r",
									"pm.test(\"status code 404 not found\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Hello-World\",\r\n    \"description\": \"This is your first repository\",\r\n    \"homepage\": \"https://github.com\",\r\n    \"private\": true,\r\n    \"has_issues\": true,\r\n    \"has_projects\": true,\r\n    \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.Update_Repository_negative_422",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//ie already exist same named repository(pblic or private ) is there you cannot\r",
									"//you can not change the repostiory name to same repository name that has already exists \r",
									"pm.test(\"Status code is 422 Validation failed, or the endpoint has been spammed.\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"hello-from-git\",\r\n    \"description\": \"This is your first repository\",\r\n    \"homepage\": \"https://github.com\",\r\n    \"private\": true,\r\n    \"has_issues\": true,\r\n    \"has_projects\": true,\r\n    \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.Update_Repository_negative_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// teh endpoint ie the path param is not in the repository ie sumit named repository is not there \r",
									"pm.test(\"Status code is 404 Resource not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Hello-World\",\r\n    \"description\": \"This is your first repository\",\r\n    \"homepage\": \"https://github.com\",\r\n    \"private\": true,\r\n    \"has_issues\": true,\r\n    \"has_projects\": true,\r\n    \"has_wiki\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/sumit",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"sumit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5.Delete_Repository",
			"item": [
				{
					"name": "1.Delete_Repository_positive_test_case_204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//after deletion no content is found\r",
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"//performance testing \r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"\r",
									"\r",
									"//check response body is empty\r",
									"pm.test(\"Check if response body is empty\", function () {\r",
									"    // Use the pm.response.text() function to get the response body as a string\r",
									"    var responseBody = pm.response.text();\r",
									"    \r",
									"    // Check if the response body is empty\r",
									"    pm.expect(responseBody).to.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"//check that heads does not contain the content-type header\r",
									"pm.test(\"Check if response has no Content-Type header\", function () {\r",
									"    // Get the response headers\r",
									"    var responseHeaders = pm.response.headers;\r",
									"    \r",
									"    // Check if the \"Content-Type\" header is not present\r",
									"    pm.expect(responseHeaders.has(\"Content-Type\")).to.be.false;\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"//check that in the body of the response does not contain the description ,url and the full_name\r",
									"pm.test(\"Check response body for absence of specific strings\", function () {\r",
									"    var responseBody = pm.response.text(); // Get the response body as text\r",
									"\r",
									"    // Check if the response text does not contain specific strings\r",
									"    pm.expect(responseBody).to.not.include(\"description\");\r",
									"    pm.expect(responseBody).to.not.include(\"url\");\r",
									"    pm.expect(responseBody).to.not.include(\"full_name\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//to check respone has no error \r",
									"pm.test(\"Response has no error\", function () {\r",
									" pm.response.to.not.be.error;\r",
									"});\r",
									"\r",
									"\r",
									"//chekc response has no body b/z the contentlength in header is 0 length\r",
									"pm.test(\"Check if response has no body\", function () {\r",
									"    // Get the response headers\r",
									"    var responseHeaders = pm.response.headers;\r",
									"    \r",
									"    // Check if the Content-Length header is set to 0\r",
									"    pm.expect(responseHeaders.get(\"Content-Length\")).to.equal(\"0\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Check Owner\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"    // Check if the 'owner' key does not exist\r",
									"    pm.expect(jsonData).to.not.have.property(\"owner\");\r",
									"\r",
									"    // Optionally, you can also check that the 'owner.login' is not equal to a specific value\r",
									"    if (jsonData.owner) {\r",
									"        pm.expect(jsonData.owner.login).to.not.equal(\"SumitKaushik1\");\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name_after_update}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name_after_update}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.1.Delete_Repository_negative_test_case_no_auth_fails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//generally bearer token is  not given in authorization generally it must give 401, no authenticaiton but it is giving 404 not found on not authentication b/z in api documentation 404 is given not 401 \r",
									"pm.test(\"status code 404 not found\",function(){\r",
									"    pm.response.to.have.status(404);\r",
									" \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name_after_update}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name_after_update}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Repository_negative_test_case_404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 resource is not found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{GitHubToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/sumit",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"sumit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete_Repository_negative_test_case_403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//here what you the beareer token is generted such that it can acces the public and private ropo but her can not delete the repo\r",
									"pm.test(\"Status code is 403 forbidden\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "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",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.github.com/repos/SumitKaushik1/{{modify_repo_name}}",
							"protocol": "https",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"repos",
								"SumitKaushik1",
								"{{modify_repo_name}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ETag",
			"value": ""
		},
		{
			"key": "modify_repo_name",
			"value": ""
		},
		{
			"key": "modify_repo_name_after_update",
			"value": ""
		},
		{
			"key": "nextPage",
			"value": ""
		},
		{
			"key": "lastPage",
			"value": ""
		}
	]
}